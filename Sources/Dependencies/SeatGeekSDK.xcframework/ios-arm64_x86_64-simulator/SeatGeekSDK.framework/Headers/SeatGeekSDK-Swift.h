#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.7 (swiftlang-5.7.0.127.4 clang-1400.0.29.50)
#ifndef SEATGEEKSDK_SWIFT_H
#define SEATGEEKSDK_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wduplicate-method-match"
#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if defined(__cplusplus)
#if !defined(SWIFT_NOEXCEPT)
# define SWIFT_NOEXCEPT noexcept
#endif
#else
#if !defined(SWIFT_NOEXCEPT)
# define SWIFT_NOEXCEPT 
#endif
#endif
#if defined(__cplusplus)
#if !defined(SWIFT_CXX_INT_DEFINED)
#define SWIFT_CXX_INT_DEFINED
namespace swift {
using Int = ptrdiff_t;
using UInt = size_t;
}
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import AVFoundation;
@import CoreFoundation;
@import CoreMedia;
@import Foundation;
@import MapKit;
@import MessageUI;
@import ObjectiveC;
@import QuartzCore;
@import UIKit;
@import WebKit;
#endif

#import <SeatGeekSDK/SeatGeekSDK.h>

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="SeatGeekSDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)
@class NSString;
@class UIColor;

/// An interface to provide various SGAPIPrivate-based statuses with their SGKDesignKit colors
SWIFT_CLASS_NAMED("APIPrivateColorProvider")
@interface SGKAPIPrivateColorProvider : NSObject
+ (UIColor * _Nonnull)fulfillmentStatusColorWithStatusString:(NSString * _Nonnull)statusString SWIFT_WARN_UNUSED_RESULT;
+ (UIColor * _Nonnull)ingestionStatusColorWithStatusString:(NSString * _Nonnull)statusString SWIFT_WARN_UNUSED_RESULT;
+ (UIColor * _Nonnull)payoutStatusColorWithStatusString:(NSString * _Nonnull)statusString SWIFT_WARN_UNUSED_RESULT;
+ (UIColor * _Nonnull)transferStatusColorWithStatusString:(NSString * _Nonnull)statusString SWIFT_WARN_UNUSED_RESULT;
+ (UIColor * _Nonnull)promotionAccentColorWithType:(SGKPromotionType)type SWIFT_WARN_UNUSED_RESULT;
+ (UIColor * _Nonnull)timelineEntryColorWithMood:(SGKPurchaseTimelineEntryStatusMood)mood SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("APIValidatorPayoutBankInstitutionNumber")
@interface SGKAPIValidatorPayoutBankInstitutionNumber : SGAPIValidator
+ (NSString * _Null_unspecified)validationErrorFor:(NSString * _Null_unspecified)string context:(id _Null_unspecified)context compact:(BOOL)compact SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("APIValidatorPayoutBankRoutingNumber")
@interface SGKAPIValidatorPayoutBankRoutingNumber : SGAPIValidator
+ (NSString * _Null_unspecified)validationErrorFor:(NSString * _Null_unspecified)string context:(id _Null_unspecified)context compact:(BOOL)compact SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("APIValidatorPayoutBankTransitNumber")
@interface SGKAPIValidatorPayoutBankTransitNumber : SGAPIValidator
+ (NSString * _Null_unspecified)validationErrorFor:(NSString * _Null_unspecified)string context:(id _Null_unspecified)context compact:(BOOL)compact SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC11SeatGeekSDK21APIValidatorPayoutEIN")
@interface APIValidatorPayoutEIN : SGAPIValidator
+ (NSString * _Null_unspecified)validationErrorFor:(NSString * _Null_unspecified)string context:(id _Null_unspecified)context compact:(BOOL)compact SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("APIValidatorZip")
@interface SGAPIValidatorZip : SGAPIValidator
+ (NSString * _Null_unspecified)validationErrorFor:(NSString * _Null_unspecified)zipcode context:(id _Null_unspecified)context compact:(BOOL)compact SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSCoder;
enum SGActionButtonColorStyle : NSInteger;
enum SGActionButtonSizeStyle : NSInteger;
@class SGTypestyle;
@class NSAttributedString;

SWIFT_CLASS_NAMED("ActionButton")
@interface SGActionButton : UIButton
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
+ (SGActionButton * _Nonnull)button SWIFT_WARN_UNUSED_RESULT;
- (void)setColorStyle:(enum SGActionButtonColorStyle)style;
- (void)setSizeStyle:(enum SGActionButtonSizeStyle)style;
- (SGTypestyle * _Nonnull)labelTypestyle SWIFT_WARN_UNUSED_RESULT;
- (void)layoutSubviews;
@property (nonatomic, getter=isHighlighted) BOOL highlighted;
@property (nonatomic, getter=isEnabled) BOOL enabled;
- (void)setTitle:(NSString * _Nullable)title forState:(UIControlState)state;
- (void)setAttributedTitle:(NSAttributedString * _Nullable)title forState:(UIControlState)state;
- (void)setPreferredLongTitle:(NSString * _Nullable)title for:(UIControlState)state;
@end


@interface SGActionButton (SWIFT_EXTENSION(SeatGeekSDK))
@end

typedef SWIFT_ENUM_NAMED(NSInteger, SGActionButtonSizeStyle, "SizeStyle", open) {
  SGActionButtonSizeStyleFullWidth = 0,
  SGActionButtonSizeStylePrimary = 1,
  SGActionButtonSizeStyleSecondary = 2,
  SGActionButtonSizeStyleNone = 3,
};


@interface SGActionButton (SWIFT_EXTENSION(SeatGeekSDK))
@end

typedef SWIFT_ENUM_NAMED(NSInteger, SGActionButtonColorStyle, "ColorStyle", open) {
  SGActionButtonColorStyleIconPrimary = 0,
  SGActionButtonColorStyleGreen = 1,
  SGActionButtonColorStyleLight = 2,
  SGActionButtonColorStyleDisabled = 3,
  SGActionButtonColorStyleNone = 4,
};

@class UIViewController;
@class UIView;
@class NSBundle;

SWIFT_CLASS_NAMED("BottomNavigatorChildControllerWrapper")
@interface SGBottomNavigatorChildControllerWrapper : SGNavigatorChildController
- (void)wrap:(UIViewController * _Nonnull)controller;
- (UIView * _Nullable)footer SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end



@interface NSBundle (SWIFT_EXTENSION(SeatGeekSDK))
/// Returns the build number
/// In a build versioned as 14.6.0 (4000), this method returns the 4000 part
@property (nonatomic, readonly, copy) NSString * _Nonnull buildNumber;
/// Returns the build version
/// In a build versioned as 14.6.0 (4000), this method returns the 14.6.0 part
@property (nonatomic, readonly, copy) NSString * _Nonnull buildVersion;
@property (nonatomic, readonly) BOOL isTestFlight;
@end

enum ButtonStyle : NSInteger;
enum ButtonColorType : NSInteger;

SWIFT_CLASS_NAMED("Button")
@interface SGKButton : UIButton
- (nonnull instancetype)initWithStyle:(enum ButtonStyle)style colorType:(enum ButtonColorType)colorType OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
@property (nonatomic, getter=isEnabled) BOOL enabled;
@property (nonatomic, getter=isHighlighted) BOOL highlighted;
- (void)setTitle:(NSString * _Nullable)title;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


typedef SWIFT_ENUM(NSInteger, ButtonColorType, open) {
  ButtonColorTypeActionPrimary = 0,
  ButtonColorTypeGreen = 1,
  ButtonColorTypeRed = 2,
  ButtonColorTypeLight = 3,
  ButtonColorTypeCustom = 4,
};

typedef SWIFT_ENUM(NSInteger, ButtonStyle, open) {
  ButtonStyleButton1 = 0,
  ButtonStyleButton2 = 1,
  ButtonStyleButton3 = 2,
};


@interface CALayer (SWIFT_EXTENSION(SeatGeekSDK))
/// round the corners in the order of top left, top right, bottom right, bottom left
- (void)sgk_roundCornersWithRadii:(NSArray<NSNumber *> * _Nonnull)radii fillColor:(UIColor * _Nonnull)fillColor borderWidth:(CGFloat)borderWidth borderColor:(UIColor * _Nonnull)borderColor;
@end

@class SGCodeValidationResponse;
@class SGCheckoutPurchase;
@class SGPaymentMethodSpreedly;
@class SGAPIError;

SWIFT_PROTOCOL_NAMED("CheckoutAPIService")
@protocol SGKCheckoutAPIService
- (void)addDiscountWithCode:(NSString * _Nonnull)code eventID:(NSString * _Nullable)eventID marketName:(NSString * _Nullable)marketName completion:(void (^ _Nonnull)(SGCodeValidationResponse * _Nonnull))completion;
- (void)fetchSummaryThenDoWithPurchase:(SGCheckoutPurchase * _Nonnull)purchase success:(MGBlock _Nullable)success fail:(SGAPIFailBlock _Nullable)fail;
- (void)submitThenDoWithPurchase:(SGCheckoutPurchase * _Nonnull)purchase success:(MGBlock _Nullable)success fail:(SGAPIFailBlock _Nullable)fail;
- (void)abandonCartWithPurchase:(SGCheckoutPurchase * _Nonnull)purchase;
- (void)selectAddonWithPurchase:(SGCheckoutPurchase * _Nonnull)purchase success:(MGBlock _Null_unspecified)success fail:(SGAPIFailBlock _Null_unspecified)fail;
- (void)addPaymentMethodWithPaymentMethod:(SGPaymentMethodSpreedly * _Nonnull)paymentMethod isSandbox:(BOOL)isSandbox success:(MGBlockWithContext _Null_unspecified)success fail:(SGAPIFailBlock _Null_unspecified)fail;
- (void)deletePaymentMethodWithPaymentMethod:(SGPaymentMethodSpreedly * _Nonnull)paymentMethod fail:(SGAPIFailBlock _Null_unspecified)fail;
- (void)updateAcknowledgementsWithPurchase:(SGCheckoutPurchase * _Nonnull)purchase success:(void (^ _Nullable)(void))success fail:(void (^ _Nullable)(NSArray<SGAPIError *> * _Nullable))fail;
- (void)updateContactWithPurchase:(SGCheckoutPurchase * _Nonnull)purchase success:(void (^ _Nullable)(void))success fail:(void (^ _Nullable)(NSArray<SGAPIError *> * _Nullable))fail;
@end

@protocol SGKCheckoutAddressControllerDelegate;
@class SGKCheckoutAddressViewModel;
@protocol UIViewControllerTransitionCoordinator;
@protocol CheckoutViewModelProtocol;

/// Creates a textfield that supports auto suggest for addresses. Auto suggest logic is from:
/// https://developer.apple.com/documentation/mapkit/searching_for_nearby_points_of_interest
SWIFT_CLASS_NAMED("CheckoutAddressController")
@interface SGKCheckoutAddressController : SGCheckoutEditScreen
@property (nonatomic, weak) id <SGKCheckoutAddressControllerDelegate> _Nullable delegate;
- (nonnull instancetype)initWithViewModel:(SGKCheckoutAddressViewModel * _Nonnull)viewModel viewTitle:(NSString * _Nonnull)viewTitle OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewDidLoad;
- (void)viewWillTransitionToSize:(CGSize)size withTransitionCoordinator:(id <UIViewControllerTransitionCoordinator> _Nonnull)coordinator;
- (void)tappedBack;
- (null_unspecified instancetype)initWithCheckoutViewModel:(id <CheckoutViewModelProtocol> _Null_unspecified)checkoutViewModel SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end



@class UITextField;

@interface SGKCheckoutAddressController (SWIFT_EXTENSION(SeatGeekSDK)) <UITextViewDelegate>
- (BOOL)textFieldShouldReturn:(UITextField * _Nonnull)textField SWIFT_WARN_UNUSED_RESULT;
@end

@class UITableView;
@class NSIndexPath;

@interface SGKCheckoutAddressController (SWIFT_EXTENSION(SeatGeekSDK)) <UITableViewDelegate>
- (void)tableView:(UITableView * _Nonnull)tableView didSelectRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
@end

@class SGSearchBar;

@interface SGKCheckoutAddressController (SWIFT_EXTENSION(SeatGeekSDK)) <SGSearchBarDelegate>
- (void)searchBar:(SGSearchBar * _Null_unspecified)searchBar textDidChange:(NSString * _Null_unspecified)searchText;
- (void)searchBarTextDidBeginEditing:(SGSearchBar * _Null_unspecified)searchBar;
@end

@class UITableViewCell;

@interface SGKCheckoutAddressController (SWIFT_EXTENSION(SeatGeekSDK)) <UITableViewDataSource>
- (NSInteger)numberOfSectionsInTableView:(UITableView * _Nonnull)tableView SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)tableView:(UITableView * _Nonnull)tableView numberOfRowsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UITableViewCell * _Nonnull)tableView:(UITableView * _Nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_PROTOCOL_NAMED("CheckoutAddressControllerDelegate")
@protocol SGKCheckoutAddressControllerDelegate
- (void)checkoutAddressController:(SGKCheckoutAddressController * _Nonnull)checkoutAddressController didUpdateAddressFromAutoSuggest:(NSString * _Nullable)text;
- (void)checkoutAddressController:(SGKCheckoutAddressController * _Nonnull)checkoutAddressController didUpdateCityFromAutoSuggest:(NSString * _Nullable)text;
- (void)checkoutAddressController:(SGKCheckoutAddressController * _Nonnull)checkoutAddressController didUpdateStateFromAutoSuggest:(NSString * _Nullable)text;
- (void)checkoutAddressController:(SGKCheckoutAddressController * _Nonnull)checkoutAddressController didUpdateZipCodeFromAutoSuggest:(NSString * _Nullable)text;
@end


SWIFT_CLASS_NAMED("CheckoutAddressViewModel")
@interface SGKCheckoutAddressViewModel : NSObject
- (nonnull instancetype)initWithInitialStreetAddress:(NSString * _Nonnull)initialStreetAddress OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class MKLocalSearchCompleter;

@interface SGKCheckoutAddressViewModel (SWIFT_EXTENSION(SeatGeekSDK)) <MKLocalSearchCompleterDelegate>
- (void)completerDidUpdateResults:(MKLocalSearchCompleter * _Nonnull)completer;
- (void)completer:(MKLocalSearchCompleter * _Nonnull)completer didFailWithError:(NSError * _Nonnull)error;
@end

@class UIScrollView;
@class SGGradientView;

/// A base footer view designed to be used at the bottom of card-style sheet and list views.
SWIFT_CLASS("_TtC11SeatGeekSDK14ListFooterView")
@interface ListFooterView : UIView
/// The scroll view to observe for UI updates based on position.
@property (nonatomic, weak) UIScrollView * _Nullable scrollView;
/// The top shadow view that appears when <code>scrollView</code> has content to scroll and hasn’t reached the bottom.
@property (nonatomic, readonly, strong) SGGradientView * _Nonnull topShadow;
/// The separator keyline view that appears when <code>scrollView</code> either can’t scroll or has reached the bottom.
@property (nonatomic, readonly, strong) UIView * _Nonnull separator;
/// Designated initializer for <code>ListFooterView</code>.
/// \param frame The frame to use for this view.
///
/// \param scrollView The scroll view to observe for UI updates. Defaults to nil.
///
- (nonnull instancetype)initWithFrame:(CGRect)frame scrollView:(UIScrollView * _Nullable)scrollView OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end

@class UILabel;

SWIFT_CLASS("_TtC11SeatGeekSDK18CheckoutFooterView")
@interface CheckoutFooterView : ListFooterView
- (nonnull instancetype)init;
- (nonnull instancetype)initWithFrame:(CGRect)frame scrollView:(UIScrollView * _Nullable)scrollView OBJC_DESIGNATED_INITIALIZER;
/// Use this property to set the on-tap event for the purchase button.
@property (nonatomic, copy) void (^ _Nullable onPurchaseButtonTap)(void);
@property (nonatomic) BOOL purchaseButtonEnabled;
@property (nonatomic, strong) UILabel * _Nonnull marketLabel;
@property (nonatomic, strong) UILabel * _Nonnull priceLabel;
@end


SWIFT_PROTOCOL("_TtP11SeatGeekSDK25CheckoutViewModelProtocol_")
@protocol CheckoutViewModelProtocol
- (void)addDiscountWithCode:(NSString * _Nonnull)code eventID:(NSString * _Nullable)eventID marketName:(NSString * _Nullable)marketName completion:(void (^ _Nonnull)(SGCodeValidationResponse * _Nonnull))completion;
- (void)fetchSummaryThenDoWithPurchase:(SGCheckoutPurchase * _Nonnull)purchase success:(MGBlock _Nullable)success fail:(SGAPIFailBlock _Nullable)fail;
- (void)submitThenDoWithPurchase:(SGCheckoutPurchase * _Nonnull)purchase success:(MGBlock _Nullable)success fail:(SGAPIFailBlock _Nullable)fail;
- (void)abandonCartWithPurchase:(SGCheckoutPurchase * _Nonnull)purchase;
- (void)selectAddonWithPurchase:(SGCheckoutPurchase * _Nonnull)purchase success:(MGBlock _Null_unspecified)success fail:(SGAPIFailBlock _Null_unspecified)fail;
- (void)addPaymentMethodWithPaymentMethod:(SGPaymentMethodSpreedly * _Nonnull)paymentMethod isSandbox:(BOOL)isSandbox success:(MGBlockWithContext _Null_unspecified)success fail:(SGAPIFailBlock _Null_unspecified)fail;
- (void)deletePaymentMethodWithPaymentMethod:(SGPaymentMethodSpreedly * _Nonnull)paymentMethod fail:(SGAPIFailBlock _Null_unspecified)fail;
- (void)updateAcknowledgementsWithPurchase:(SGCheckoutPurchase * _Nonnull)purchase success:(void (^ _Nullable)(void))success fail:(void (^ _Nullable)(NSArray<SGAPIError *> * _Nullable))fail;
- (void)updateContactWithPurchase:(SGCheckoutPurchase * _Nonnull)purchase success:(void (^ _Nullable)(void))success fail:(void (^ _Nullable)(NSArray<SGAPIError *> * _Nullable))fail;
@end


SWIFT_CLASS_NAMED("CheckoutViewModel")
@interface SGKCheckoutViewModel : NSObject <CheckoutViewModelProtocol>
- (nonnull instancetype)initWithCheckoutAPIService:(id <SGKCheckoutAPIService> _Nonnull)checkoutAPIService OBJC_DESIGNATED_INITIALIZER;
- (void)addDiscountWithCode:(NSString * _Nonnull)code eventID:(NSString * _Nullable)eventID marketName:(NSString * _Nullable)marketName completion:(void (^ _Nonnull)(SGCodeValidationResponse * _Nonnull))completion;
- (void)abandonCartWithPurchase:(SGCheckoutPurchase * _Nonnull)purchase;
- (void)fetchSummaryThenDoWithPurchase:(SGCheckoutPurchase * _Nonnull)purchase success:(MGBlock _Nullable)success fail:(SGAPIFailBlock _Nullable)fail;
- (void)submitThenDoWithPurchase:(SGCheckoutPurchase * _Nonnull)purchase success:(MGBlock _Nullable)success fail:(SGAPIFailBlock _Nullable)fail;
- (void)selectAddonWithPurchase:(SGCheckoutPurchase * _Nonnull)purchase success:(MGBlock _Null_unspecified)success fail:(SGAPIFailBlock _Null_unspecified)fail;
- (void)addPaymentMethodWithPaymentMethod:(SGPaymentMethodSpreedly * _Nonnull)paymentMethod isSandbox:(BOOL)isSandbox success:(MGBlockWithContext _Null_unspecified)success fail:(SGAPIFailBlock _Null_unspecified)fail;
- (void)deletePaymentMethodWithPaymentMethod:(SGPaymentMethodSpreedly * _Nonnull)paymentMethod fail:(SGAPIFailBlock _Null_unspecified)fail;
- (void)updateAcknowledgementsWithPurchase:(SGCheckoutPurchase * _Nonnull)purchase success:(void (^ _Nullable)(void))success fail:(void (^ _Nullable)(NSArray<SGAPIError *> * _Nullable))fail;
- (void)updateContactWithPurchase:(SGCheckoutPurchase * _Nonnull)purchase success:(void (^ _Nullable)(void))success fail:(void (^ _Nullable)(NSArray<SGAPIError *> * _Nullable))fail;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


enum ContactSupportSource : NSInteger;

SWIFT_CLASS_NAMED("ContactSupportManager")
@interface SGContactSupportManager : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull defaultCustomerServiceEmail;)
+ (NSString * _Nonnull)defaultCustomerServiceEmail SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithContactSupportSource:(enum ContactSupportSource)contactSupportSource OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, ContactSupportSource, open) {
  ContactSupportSourceAccountSettings = 0,
  ContactSupportSourceMyTickets = 1,
  ContactSupportSourceCheckout = 2,
  ContactSupportSourceEventTickets = 3,
  ContactSupportSourceSellTickets = 4,
};

@class SGCountrySelectorViewModel;
@class UICollectionView;

SWIFT_CLASS_NAMED("CountrySelectorViewController")
@interface SGCountrySelectorViewController : UIViewController <UICollectionViewDelegate>
- (nonnull instancetype)initWithViewModel:(SGCountrySelectorViewModel * _Nonnull)viewModel selectedValueHandler:(void (^ _Nonnull)(NSString * _Nonnull))selectedValueHandler OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)collectionView:(UICollectionView * _Nonnull)collectionView didDeselectItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (void)collectionView:(UICollectionView * _Nonnull)collectionView didSelectItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end

@class SGPaymentMethodBillingInfoFieldOption;

SWIFT_CLASS_NAMED("CountrySelectorViewModel")
@interface SGCountrySelectorViewModel : NSObject
- (nonnull instancetype)initWithOptions:(NSArray<SGPaymentMethodBillingInfoFieldOption *> * _Nonnull)options initialSelectedValue:(NSString * _Nonnull)initialSelectedValue OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSNumber;

SWIFT_CLASS_NAMED("CreditCardDetails")
@interface SGCreditCardDetails : NSObject <NSCopying>
@property (nonatomic, readonly, copy) NSString * _Nonnull creditCardNumber;
@property (nonatomic, readonly, strong) NSNumber * _Nullable expirationMonth;
@property (nonatomic, readonly, strong) NSNumber * _Nullable expirationYear;
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@protocol SGCreditCardScannerViewControllerDelegate;

SWIFT_CLASS_NAMED("CreditCardScannerViewController")
@interface SGCreditCardScannerViewController : UIViewController
@property (nonatomic, weak) id <SGCreditCardScannerViewControllerDelegate> _Nullable delegate;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewDidAppear:(BOOL)animated;
- (void)viewDidDisappear:(BOOL)animated;
- (void)viewDidLayoutSubviews;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class AVCaptureOutput;
@class AVCaptureConnection;

@interface SGCreditCardScannerViewController (SWIFT_EXTENSION(SeatGeekSDK)) <AVCaptureVideoDataOutputSampleBufferDelegate>
- (void)captureOutput:(AVCaptureOutput * _Nonnull)output didOutputSampleBuffer:(CMSampleBufferRef _Nonnull)sampleBuffer fromConnection:(AVCaptureConnection * _Nonnull)connection;
@end


SWIFT_PROTOCOL_NAMED("CreditCardScannerViewControllerDelegate")
@protocol SGCreditCardScannerViewControllerDelegate
- (void)creditCardScannerViewController:(SGCreditCardScannerViewController * _Nonnull)creditCardScannerViewController didScanCreditCardDetails:(SGCreditCardDetails * _Nonnull)creditCardDetails;
@end







/// An accessory bar that enables easier/faster pagination through large forms, like address entry.
/// Offers a delegate that can provide a custom secondary accessory action (the default is clear)
SWIFT_CLASS_NAMED("FormFieldAccessoryBar")
@interface SGFormFieldAccessoryBar : UIView
/// The secondary accessory button displayed on the righthand side next to the done button.
/// This is set to <code>FormFieldAccessoryBar.clearButton</code> by default.
@property (nonatomic, strong) UIButton * _Nullable accessoryButton;
/// Designated initializer for <code>FormFieldAccessoryBar</code>.
/// \param textFields The set of text fields this bar should manage and paginate between.
///
/// \param initialTextField The initial text field this bar should focus on.
///
- (nonnull instancetype)initWithTextFields:(NSArray<UITextField *> * _Nonnull)textFields initialTextField:(UITextField * _Nonnull)initialTextField OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC11SeatGeekSDK26GeneralMessagingController")
@interface GeneralMessagingController : SGNavigatorChildController
- (void)viewDidLoad;
- (void)viewDidLayoutSubviews;
- (void)viewDidAppear:(BOOL)animated;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class UIImage;
@class SGPromotion;

@interface GeneralMessagingController (SWIFT_EXTENSION(SeatGeekSDK))
/// Creates a controller with details about NFL verified primary inventory.
///
/// returns:
/// A controller with details about NFL verified primary inventory.
+ (GeneralMessagingController * _Nonnull)nflVerifiedPrimaryController SWIFT_WARN_UNUSED_RESULT;
/// Creates a controller with details on the Buyer Guarantee
///
/// returns:
/// A controller with details on the Buyer Guarantee
+ (GeneralMessagingController * _Nonnull)buyerGuaranteeControllerWithShowsCloseButton:(BOOL)showsCloseButton SWIFT_WARN_UNUSED_RESULT;
/// Creates a controller with more callout information.
///
/// returns:
/// A controller with more callout information.
+ (GeneralMessagingController * _Nonnull)calloutControllerWithTitle:(NSString * _Nonnull)title subtitle:(NSString * _Nullable)subtitle image:(UIImage * _Nullable)image promotion:(SGPromotion * _Nullable)promotion learnMore:(BOOL)learnMore SWIFT_WARN_UNUSED_RESULT;
@end



SWIFT_CLASS_NAMED("HelpCenterWebViewController")
@interface SGHelpCenterWebViewController : UIViewController
- (nonnull instancetype)initWithUiOrigin:(SGTrackerUserHelpUIOrigin)uiOrigin contactSupportManager:(SGContactSupportManager * _Nonnull)contactSupportManager;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)loadView;
- (void)viewDidLoad;
- (void)viewDidAppear:(BOOL)animated;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end

@class WKWebView;
@class WKNavigationAction;

@interface SGHelpCenterWebViewController (SWIFT_EXTENSION(SeatGeekSDK)) <WKNavigationDelegate>
- (void)webView:(WKWebView * _Nonnull)webView decidePolicyForNavigationAction:(WKNavigationAction * _Nonnull)navigationAction decisionHandler:(void (^ _Nonnull)(WKNavigationActionPolicy))decisionHandler;
@end

@class NSURL;
@class NSError;

SWIFT_CLASS_NAMED("ImageLoader")
@interface SGImageLoader : NSObject
/// Asynchronously fetches and decodes an image at the specified URL.
/// \param url The URL of the image to be retrieved.
///
/// \param completionHandler A completion handler that passes in either the decoded image or an error parameter.
///
- (void)loadImageAt:(NSURL * _Nonnull)url completionHandler:(void (^ _Nonnull)(UIImage * _Nullable, NSError * _Nullable))completionHandler;
/// Asynchronously fetches an image at the specified URL and decodes it into a downsampled thumbnail image.
/// \param url The URL of the image to be retrieved.
///
/// \param thumbnailMaximumDimension The desired maximum height or width of the decoded thumbnail image (in points).
///
/// \param completionHandler A completion handler that passes in either the decoded thumbnail image or an error parameter.
///
- (void)loadImageAt:(NSURL * _Nonnull)url thumbnailMaximumDimension:(CGFloat)thumbnailMaximumDimension completionHandler:(void (^ _Nonnull)(UIImage * _Nullable, NSError * _Nullable))completionHandler;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// A Label subclass to make Typestyles + Labels ez pz.
/// Usage: Set the typestyle or sgTypestyle on a label, and then you can set text and the label properties as you normally would
/// let label = Label(typestyle: .title)
/// // label.textColor = .sgTextPrimary
/// label.textAlignment = .center
/// label.lineBreakMode = .wordWrapping
/// label.text = “My Text”
SWIFT_CLASS_NAMED("Label")
@interface SGLabel : UILabel
+ (SGLabel * _Nonnull)labelWithTypestyle:(SGTypestyle * _Nonnull)typestyle SWIFT_WARN_UNUSED_RESULT;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)layoutSubviews;
@property (nonatomic, strong) SGTypestyle * _Nullable typestyle;
@property (nonatomic, copy) NSString * _Nullable text;
@property (nonatomic) NSTextAlignment textAlignment;
@property (nonatomic, strong) UIColor * _Null_unspecified textColor;
@property (nonatomic) NSLineBreakMode lineBreakMode;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end




@class UICollectionViewLayout;
@class UICollectionReusableView;
@class UICollectionViewCell;

SWIFT_CLASS_NAMED("MyTicketsController")
@interface SGMyTicketsController : SGViewController <SGNavigationLayoutProtocol, UICollectionViewDataSource, UICollectionViewDelegateFlowLayout>
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewDidAppear:(BOOL)animated;
- (void)updateViewConstraints;
- (void)safeAreaInsetsChanged;
- (void)viewWillTransitionToSize:(CGSize)size withTransitionCoordinator:(id <UIViewControllerTransitionCoordinator> _Nonnull)coordinator;
- (BOOL)usesTallNavBar SWIFT_WARN_UNUSED_RESULT;
- (BOOL)hideNavBarOnShow SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)numberOfSectionsInCollectionView:(UICollectionView * _Nonnull)collectionView SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)collectionView:(UICollectionView * _Nonnull)collectionView numberOfItemsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (CGSize)collectionView:(UICollectionView * _Nonnull)collectionView layout:(UICollectionViewLayout * _Nonnull)collectionViewLayout referenceSizeForHeaderInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UICollectionReusableView * _Nonnull)collectionView:(UICollectionView * _Nonnull)collectionView viewForSupplementaryElementOfKind:(NSString * _Nonnull)kind atIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (UICollectionViewCell * _Nonnull)collectionView:(UICollectionView * _Nonnull)collectionView cellForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (CGSize)collectionView:(UICollectionView * _Nonnull)collectionView layout:(UICollectionViewLayout * _Nonnull)collectionViewLayout sizeForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)collectionView:(UICollectionView * _Nonnull)collectionView willDisplayCell:(UICollectionViewCell * _Nonnull)cell forItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (void)collectionView:(UICollectionView * _Nonnull)collectionView didSelectItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (void)scrollViewDidScroll:(UIScrollView * _Nonnull)scrollView;
- (void)scrollViewWillBeginDragging:(UIScrollView * _Nonnull)scrollView;
- (void)scrollViewDidEndDragging:(UIScrollView * _Nonnull)scrollView willDecelerate:(BOOL)decelerate;
- (void)scrollViewDidEndDecelerating:(UIScrollView * _Nonnull)scrollView;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


@class MFMailComposeViewController;

@interface SGMyTicketsController (SWIFT_EXTENSION(SeatGeekSDK)) <MFMailComposeViewControllerDelegate>
- (void)mailComposeController:(MFMailComposeViewController * _Nonnull)controller didFinishWithResult:(MFMailComposeResult)result error:(NSError * _Nullable)error;
@end



@interface NSAttributedString (SWIFT_EXTENSION(SeatGeekSDK))
- (CGSize)sgk_sizeForWidth:(CGFloat)forWidth SWIFT_WARN_UNUSED_RESULT;
@end






@interface NSString (SWIFT_EXTENSION(SeatGeekSDK))
- (NSAttributedString * _Nonnull)withTypestyle:(SGTypestyle * _Nonnull)style SWIFT_WARN_UNUSED_RESULT;
@end






SWIFT_CLASS_NAMED("NavBarButton")
@interface SGNavBarButton : UIButton
/// Action to perform on tapping the button
@property (nonatomic, copy) MGBlock _Nullable onTap;
/// the distance between the icon / text and the left edge of the screen
@property (nonatomic) CGFloat solidLeftMargin;
/// the distance between the icon / text and the right edge of the screen
@property (nonatomic) CGFloat solidRightMargin;
/// the distance between the background of the button and the left edge of the screen
@property (nonatomic) CGFloat transparentLeftMargin;
/// the distance between the background of the button and the right edge of the screen
@property (nonatomic) CGFloat transparentRightMargin;
/// the distance between the translucent background of the button and the left of the icon
@property (nonatomic) CGFloat transparentLeftInset;
/// the distance between the translucent background of the button and the right edge of the icon
@property (nonatomic) CGFloat transparentRightInset;
/// Set an image to be used on this bar button
@property (nonatomic, strong) UIImage * _Nullable icon;
/// Set a title to be used on this bar button
@property (nonatomic, copy) NSString * _Nullable title;
- (nonnull instancetype)init;
- (nonnull instancetype)initWithHostingController:(UIViewController * _Nullable)hostingController OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)updateContent;
@property (nonatomic, readonly) CGSize intrinsicContentSize;
- (void)updateConstraints;
- (void)didMoveToWindow;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS_NAMED("NavBarBackButton")
@interface SGNavBarBackButton : SGNavBarButton
- (nonnull instancetype)initWithHostingController:(UIViewController * _Nullable)hostingController SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end



@interface SGNavBarButton (SWIFT_EXTENSION(SeatGeekSDK))
/// A back button which automatically handles back behaviour in a UINavigationController
+ (SGNavBarBackButton * _Nonnull)backButtonFor:(UIViewController * _Nullable)hostingController SWIFT_WARN_UNUSED_RESULT;
/// A generic back button with no onTap action
+ (SGNavBarButton * _Nonnull)backButton SWIFT_WARN_UNUSED_RESULT;
+ (SGNavBarButton * _Nonnull)buttonWithTitle:(NSString * _Nonnull)title SWIFT_WARN_UNUSED_RESULT;
+ (SGNavBarButton * _Nonnull)buttonWithImage:(UIImage * _Nullable)image voiceover:(NSString * _Nonnull)voiceover SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS_NAMED("NavBarTrackButton")
@interface SGNavBarTrackButton : SGNavBarButton
- (nonnull instancetype)initWithHostingController:(UIViewController * _Nullable)hostingController SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end




SWIFT_CLASS_NAMED("VerticalListRowView")
@interface SGVerticalListRowView : UIControl
@property (nonatomic) BOOL isEditable;
@property (nonatomic, copy) void (^ _Nullable onDeleteTap)(void);
@property (nonatomic, copy) void (^ _Nullable onTap)(void);
@property (nonatomic, copy) void (^ _Nullable willBeginEditing)(void);
@property (nonatomic, copy) void (^ _Nullable willEndEditing)(void);
@property (nonatomic, strong) UIView * _Nullable contentView;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, readonly) CGSize intrinsicContentSize;
@property (nonatomic, getter=isHighlighted) BOOL highlighted;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end

@protocol SGPaymentMethodProtocol;

SWIFT_CLASS_NAMED("PaymentCardRowView")
@interface SGPaymentCardRowView : SGVerticalListRowView
@property (nonatomic, readonly, strong) id <SGPaymentMethodProtocol> _Nonnull paymentMethod;
@property (nonatomic, getter=isSelected) BOOL selected;
- (nonnull instancetype)initWithPaymentMethod:(id <SGPaymentMethodProtocol> _Nonnull)paymentMethod OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (void)styleSelected:(BOOL)selected;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_PROTOCOL_NAMED("PaymentMethodProtocol")
@protocol SGPaymentMethodProtocol
@property (nonatomic, readonly, copy) NSString * _Nonnull ID;
@property (nonatomic, readonly, strong) UIImage * _Nullable creditCardIcon;
@property (nonatomic, readonly, copy) NSString * _Nullable last4Digits;
@property (nonatomic, readonly, copy) NSString * _Nullable maskedLast4Digits;
@property (nonatomic, readonly, copy) NSString * _Nullable nameAndExpirationDate;
@property (nonatomic, readonly) BOOL isSpreedly;
@property (nonatomic, readonly, copy) NSString * _Nullable cardType;
@end

@class SGTransfer;

SWIFT_CLASS("_TtC11SeatGeekSDK29PaymentMethodSelectController")
@interface PaymentMethodSelectController : SGCheckoutEditScreen
- (nonnull instancetype)initWithCheckoutViewModel:(id <CheckoutViewModelProtocol> _Nonnull)checkoutViewModel allowSelectApplePay:(BOOL)allowSelectApplePay allowSelectAffirmPaymentMethod:(BOOL)allowSelectAffirmPaymentMethod transfer:(SGTransfer * _Nullable)transfer OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewSafeAreaInsetsDidChange;
- (void)viewDidAppear:(BOOL)animated;
- (void)viewDidDisappear:(BOOL)animated;
- (SGNavigatorAnimation)transitionAnimation SWIFT_WARN_UNUSED_RESULT;
- (UIView * _Nonnull)footer SWIFT_WARN_UNUSED_RESULT;
- (void)undoChanges;
- (void)saveChangesThenDo:(MGBlock _Null_unspecified)success fail:(SGAPIFailBlock _Null_unspecified)fail;
- (null_unspecified instancetype)initWithCheckoutViewModel:(id <CheckoutViewModelProtocol> _Null_unspecified)checkoutViewModel SWIFT_UNAVAILABLE;
@end


@interface PaymentMethodSelectController (SWIFT_EXTENSION(SeatGeekSDK))
+ (PaymentMethodSelectController * _Nonnull)controllerWithAllowSelectApplePay:(BOOL)allowSelectApplePay transfer:(SGTransfer * _Nonnull)transfer SWIFT_WARN_UNUSED_RESULT;
@end


typedef SWIFT_ENUM_NAMED(NSInteger, SGKPayoutBankCountry, "PayoutBankCountry", open) {
  SGKPayoutBankCountryUsa = 0,
  SGKPayoutBankCountryCanada = 1,
};


SWIFT_CLASS_NAMED("PayoutBankCountrySelector")
@interface SGKPayoutBankCountrySelector : SGNavigatorChildController
- (nonnull instancetype)initWithSelectedBankCountry:(enum SGKPayoutBankCountry)selectedBankCountry onBankCountrySelected:(void (^ _Nullable)(enum SGKPayoutBankCountry))onBankCountrySelected OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS_NAMED("PayoutBusinessAddress")
@interface SGKPayoutBusinessAddress : NSObject
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, copy) NSString * _Nullable address1;
@property (nonatomic, copy) NSString * _Nullable address2;
@property (nonatomic, copy) NSString * _Nullable locality;
@property (nonatomic, copy) NSString * _Nullable region;
@property (nonatomic, copy) NSString * _Nullable postalCode;
@property (nonatomic, copy) NSString * _Nullable country;
@property (nonatomic, copy) NSString * _Nullable taxId;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (NSDictionary<NSString *, id> * _Nonnull)payload SWIFT_WARN_UNUSED_RESULT;
@end

@class SGPublicListing;
@class SGPayoutMethod;

SWIFT_CLASS_NAMED("PayoutBusinessAddressController")
@interface SGKPayoutBusinessAddressController : SGNavigatorChildController <UITextFieldDelegate>
/// Designated initializer for <code>PayoutBusinessAddressController</code>.
/// \param listing The listing object that this address will belong to. This is passed to subsequent screens if needed.
///
/// \param payoutMethod The payout method to read an existing address from (for editing), if any. If nil is passed, a new address will be created.
///
/// \param onSubmit Custom closure to execute on successful save of information, if any
///
/// \param saveOnEdit If the payout address should save on editing
///
- (nonnull instancetype)initWithListing:(SGPublicListing * _Nullable)listing payoutMethod:(SGPayoutMethod * _Nullable)payoutMethod saveOnEdit:(BOOL)saveOnEdit onSubmit:(void (^ _Nullable)(void))onSubmit OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewWillDisappear:(BOOL)animated;
- (void)viewDidAppear:(BOOL)animated;
- (void)viewDidLayoutSubviews;
- (BOOL)textFieldShouldReturn:(UITextField * _Nonnull)textField SWIFT_WARN_UNUSED_RESULT;
- (BOOL)textFieldShouldBeginEditing:(UITextField * _Nonnull)textField SWIFT_WARN_UNUSED_RESULT;
- (BOOL)textField:(UITextField * _Nonnull)textField shouldChangeCharactersInRange:(NSRange)range replacementString:(NSString * _Nonnull)string SWIFT_WARN_UNUSED_RESULT;
- (void)textFieldDidBeginEditing:(UITextField * _Nonnull)textField;
- (void)textFieldDidEndEditing:(UITextField * _Nonnull)textField;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end


@interface SGKPayoutBusinessAddressController (SWIFT_EXTENSION(SeatGeekSDK)) <SGKCheckoutAddressControllerDelegate>
- (void)checkoutAddressController:(SGKCheckoutAddressController * _Nonnull)checkoutAddressController didUpdateAddressFromAutoSuggest:(NSString * _Nullable)text;
- (void)checkoutAddressController:(SGKCheckoutAddressController * _Nonnull)checkoutAddressController didUpdateCityFromAutoSuggest:(NSString * _Nullable)text;
- (void)checkoutAddressController:(SGKCheckoutAddressController * _Nonnull)checkoutAddressController didUpdateStateFromAutoSuggest:(NSString * _Nullable)text;
- (void)checkoutAddressController:(SGKCheckoutAddressController * _Nonnull)checkoutAddressController didUpdateZipCodeFromAutoSuggest:(NSString * _Nullable)text;
@end


SWIFT_CLASS_NAMED("PayoutMethodSelectionController")
@interface SGPayoutMethodSelectionController : SGNavigatorChildController
- (nonnull instancetype)initWithListing:(SGPublicListing * _Nullable)listing payoutMethod:(SGPayoutMethod * _Nullable)payoutMethod availablePayoutMethods:(NSArray<SGPayoutMethod *> * _Nullable)availablePayoutMethods OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewDidAppear:(BOOL)animated;
- (void)viewDidLayoutSubviews;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS_NAMED("PayoutPersonalAddressController")
@interface SGKPayoutPersonalAddressController : SGNavigatorChildController <UITextFieldDelegate>
/// Designated initializer for <code>PayoutPersonalAddressController</code>.
/// \param listing The listing object that this address will belong to. This is passed to subsequent screens if needed.
///
/// \param payoutMethod The payout method to read an existing address from (for editing), if any. If nil is passed, a new address will be created.
///
/// \param onSubmit Custom closure to execute on successful save of information, if any
///
/// \param saveOnEdit If the payout address should save on editing
///
- (nonnull instancetype)initWithListing:(SGPublicListing * _Nullable)listing payoutMethod:(SGPayoutMethod * _Nullable)payoutMethod saveOnEdit:(BOOL)saveOnEdit onSubmit:(void (^ _Nullable)(void))onSubmit OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewWillDisappear:(BOOL)animated;
- (void)viewDidAppear:(BOOL)animated;
- (void)viewWillLayoutSubviews;
- (BOOL)textFieldShouldReturn:(UITextField * _Nonnull)textField SWIFT_WARN_UNUSED_RESULT;
- (BOOL)textFieldShouldBeginEditing:(UITextField * _Nonnull)textField SWIFT_WARN_UNUSED_RESULT;
- (BOOL)textField:(UITextField * _Nonnull)textField shouldChangeCharactersInRange:(NSRange)range replacementString:(NSString * _Nonnull)string SWIFT_WARN_UNUSED_RESULT;
- (void)textFieldDidBeginEditing:(UITextField * _Nonnull)textField;
- (void)textFieldDidEndEditing:(UITextField * _Nonnull)textField;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end


@interface SGKPayoutPersonalAddressController (SWIFT_EXTENSION(SeatGeekSDK)) <SGKCheckoutAddressControllerDelegate>
- (void)checkoutAddressController:(SGKCheckoutAddressController * _Nonnull)checkoutAddressController didUpdateAddressFromAutoSuggest:(NSString * _Nullable)text;
- (void)checkoutAddressController:(SGKCheckoutAddressController * _Nonnull)checkoutAddressController didUpdateCityFromAutoSuggest:(NSString * _Nullable)text;
- (void)checkoutAddressController:(SGKCheckoutAddressController * _Nonnull)checkoutAddressController didUpdateStateFromAutoSuggest:(NSString * _Nullable)text;
- (void)checkoutAddressController:(SGKCheckoutAddressController * _Nonnull)checkoutAddressController didUpdateZipCodeFromAutoSuggest:(NSString * _Nullable)text;
@end


SWIFT_CLASS_NAMED("PayoutPersonalBusinessAddressController")
@interface SGKPayoutPersonalBusinessAddressController : SGNavigatorChildController <UITextFieldDelegate>
/// Designated initializer for <code>PayoutPersonalBusinessAddressController</code>.
/// \param listing The listing object that this address will belong to. This is passed to subsequent screens if needed.
///
/// \param payoutMethod The payout method to read an existing address from (for editing), if any. If nil is passed, a new address will be created.
///
/// \param onSubmit Custom closure to execute on successful save of information, if any
///
/// \param saveOnEdit If the payout address should save on editing
///
- (nonnull instancetype)initWithListing:(SGPublicListing * _Nullable)listing payoutMethod:(SGPayoutMethod * _Nullable)payoutMethod saveOnEdit:(BOOL)saveOnEdit onSubmit:(void (^ _Nullable)(void))onSubmit OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewWillDisappear:(BOOL)animated;
- (void)viewDidLayoutSubviews;
- (BOOL)textFieldShouldReturn:(UITextField * _Nonnull)textField SWIFT_WARN_UNUSED_RESULT;
- (BOOL)textFieldShouldBeginEditing:(UITextField * _Nonnull)textField SWIFT_WARN_UNUSED_RESULT;
- (BOOL)textField:(UITextField * _Nonnull)textField shouldChangeCharactersInRange:(NSRange)range replacementString:(NSString * _Nonnull)string SWIFT_WARN_UNUSED_RESULT;
- (void)textFieldDidBeginEditing:(UITextField * _Nonnull)textField;
- (void)textFieldDidEndEditing:(UITextField * _Nonnull)textField;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end


@interface SGKPayoutPersonalBusinessAddressController (SWIFT_EXTENSION(SeatGeekSDK)) <SGKCheckoutAddressControllerDelegate>
- (void)checkoutAddressController:(SGKCheckoutAddressController * _Nonnull)checkoutAddressController didUpdateAddressFromAutoSuggest:(NSString * _Nullable)text;
- (void)checkoutAddressController:(SGKCheckoutAddressController * _Nonnull)checkoutAddressController didUpdateCityFromAutoSuggest:(NSString * _Nullable)text;
- (void)checkoutAddressController:(SGKCheckoutAddressController * _Nonnull)checkoutAddressController didUpdateStateFromAutoSuggest:(NSString * _Nullable)text;
- (void)checkoutAddressController:(SGKCheckoutAddressController * _Nonnull)checkoutAddressController didUpdateZipCodeFromAutoSuggest:(NSString * _Nullable)text;
@end


SWIFT_CLASS_NAMED("PayoutSellerTypeViewController")
@interface SGPayoutSellerTypeViewController : SGNavigatorChildController <UICollectionViewDelegate>
@property (nonatomic) CGFloat contentHeight;
- (nonnull instancetype)initWithPayoutMethod:(SGPayoutMethod * _Nonnull)payoutMethod listing:(SGPublicListing * _Nullable)listing OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
- (void)viewDidLoad;
- (void)collectionView:(UICollectionView * _Nonnull)collectionView didSelectItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
@end


SWIFT_CLASS_NAMED("PayoutUserInfoController")
@interface SGKPayoutUserInfoController : SGNavigatorChildController <UITextFieldDelegate>
/// Designated initializer for <code>PayoutUserInfoController</code>.
/// \param listing The listing object that this address will belong to. This is passed to subsequent screens if needed.
///
/// \param payoutMethod The payout method to read an existing address from (for editing), if any. If nil is passed, a new address will be created.
///
/// \param onSubmit Custom closure to execute on successful save of information, if any
///
/// \param saveOnEdit If the payout address should save on editing
///
- (nonnull instancetype)initWithListing:(SGPublicListing * _Nullable)listing payoutMethod:(SGPayoutMethod * _Nullable)payoutMethod saveOnEdit:(BOOL)saveOnEdit onSubmit:(void (^ _Nullable)(void))onSubmit OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
- (void)viewDidLoad;
- (void)viewWillDisappear:(BOOL)animated;
- (void)viewDidAppear:(BOOL)animated;
- (void)viewDidLayoutSubviews;
- (BOOL)textFieldShouldReturn:(UITextField * _Nonnull)textField SWIFT_WARN_UNUSED_RESULT;
- (BOOL)textField:(UITextField * _Nonnull)textField shouldChangeCharactersInRange:(NSRange)range replacementString:(NSString * _Nonnull)string SWIFT_WARN_UNUSED_RESULT;
- (void)textFieldDidBeginEditing:(UITextField * _Nonnull)textField;
- (void)textFieldDidEndEditing:(UITextField * _Nonnull)textField;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS_NAMED("PriceFormattingTextFieldDelegate")
@interface SGPriceFormattingTextFieldDelegate : NSObject <UITextFieldDelegate>
@property (nonatomic) float price;
@property (nonatomic, copy) NSString * _Nonnull isoCurrencyCode;
@property (nonatomic, strong) NSAttributedString * _Nullable attributedAccessoryText;
- (nonnull instancetype)initWithTextField:(UITextField * _Nonnull)textField priceChangeHandler:(BOOL (^ _Nonnull)(SGPriceFormattingTextFieldDelegate * _Nonnull, float))priceChangeHandler OBJC_DESIGNATED_INITIALIZER;
- (void)textFieldDidBeginEditing:(UITextField * _Nonnull)textField;
- (BOOL)textField:(UITextField * _Nonnull)textField shouldChangeCharactersInRange:(NSRange)range replacementString:(NSString * _Nonnull)string SWIFT_WARN_UNUSED_RESULT;
- (void)textFieldDidEndEditing:(UITextField * _Nonnull)textField reason:(UITextFieldDidEndEditingReason)reason;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@protocol SGPublicSaleMarketCodeViewable;

SWIFT_CLASS_NAMED("PublicSaleMarketCodeView")
@interface SGPublicSaleMarketCodeView : UIView
@property (nonatomic, weak) UIViewController * _Nullable viewControllerToLaunchPasteboardFrom;
- (nonnull instancetype)initWithSeatInformation:(id <SGPublicSaleMarketCodeViewable> _Nonnull)seatInformation OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithSeatTitle:(NSString * _Nullable)seatTitle seatToken:(NSString * _Nullable)seatToken OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


SWIFT_PROTOCOL_NAMED("PublicSaleMarketCodeViewable")
@protocol SGPublicSaleMarketCodeViewable
@property (nonatomic, readonly, copy) NSString * _Nullable seatTitle;
@property (nonatomic, readonly, copy) NSString * _Nullable seatToken;
@end

@class SGBottomModalNavigator;

SWIFT_CLASS_NAMED("PublicSaleSuccessController")
@interface SGPublicSaleSuccessController : UIViewController
@property (nonatomic, weak) SGBottomModalNavigator * _Nullable bottomModalNavigator;
- (nonnull instancetype)initWithListing:(SGPublicListing * _Nonnull)listing;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
- (void)viewDidLoad;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end


typedef SWIFT_ENUM_NAMED(NSInteger, SGMyTicketsRefreshPriority, "RefreshPriority", open) {
  SGMyTicketsRefreshPriorityRequired = 0,
  SGMyTicketsRefreshPriorityNormal = 1,
};


SWIFT_CLASS_NAMED("ReturnPolicy")
@interface SGKReturnPolicy : NSObject
- (NSDictionary<NSString *, id> * _Nullable)payload SWIFT_WARN_UNUSED_RESULT;
+ (SGKReturnPolicy * _Nullable)returnPolicyFromDictionary:(NSDictionary<NSString *, id> * _Nonnull)dictionary SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("ReturnPolicyEligible")
@interface SGKReturnPolicyEligible : NSObject
- (NSDictionary<NSString *, id> * _Nonnull)payload SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS_NAMED("ReturnPolicyIneligible")
@interface SGKReturnPolicyIneligible : NSObject
- (NSDictionary<NSString *, id> * _Nonnull)payload SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS_NAMED("SDKTracker")
@interface SGSDKTracker : NSObject
- (nonnull instancetype)initWithClientID:(NSString * _Nonnull)clientID OBJC_DESIGNATED_INITIALIZER;
- (void)logMParticleEvent:(NSString * _Nonnull)eventName withEventMetadata:(NSDictionary<NSString *, id> * _Nullable)eventMetadata;
- (void)setMParticleUserAttributeForKey:(NSString * _Nonnull)key value:(id _Nonnull)value;
- (void)removeMParticleUserAttributeForKey:(NSString * _Nonnull)key;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end




SWIFT_CLASS("_TtC11SeatGeekSDK17SGAcknowledgement")
@interface SGAcknowledgement : NSObject
@property (nonatomic, copy) NSString * _Nonnull id;
@property (nonatomic) BOOL value;
@property (nonatomic, copy) NSString * _Nonnull markdownText;
@property (nonatomic, copy) NSString * _Nonnull category;
@property (nonatomic) BOOL required;
@property (nonatomic, copy) NSString * _Nonnull slug;
+ (SGAcknowledgement * _Nullable)acknowledgementFromDictionary:(NSDictionary<NSString *, id> * _Nonnull)dictionary SWIFT_WARN_UNUSED_RESULT;
- (NSDictionary<NSString *, id> * _Nonnull)payloadUsingNewCheckoutAPI:(BOOL)usingNewCheckoutAPI SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface SGAcknowledgement (SWIFT_EXTENSION(SeatGeekSDK))
+ (SGAcknowledgement * _Nullable)firstAcknowledgementThatNeedsToBeAgreedIn:(NSArray<SGAcknowledgement *> * _Nullable)acknowledgements SWIFT_WARN_UNUSED_RESULT;
@end



@interface SGAcknowledgement (SWIFT_EXTENSION(SeatGeekSDK))
+ (NSArray<SGAcknowledgement *> * _Nonnull)implicitAcknowlegdementsIn:(NSArray<SGAcknowledgement *> * _Nonnull)acknowledgements SWIFT_WARN_UNUSED_RESULT;
+ (NSArray<SGAcknowledgement *> * _Nonnull)explicitAcknowlegdementsIn:(NSArray<SGAcknowledgement *> * _Nonnull)acknowledgements SWIFT_WARN_UNUSED_RESULT;
@end


@interface SGAlertView (SWIFT_EXTENSION(SeatGeekSDK))
/// Creates an alert view to present when the user does not have an active email account.
/// \param recipientEmail Optional recipient email address. Will be presented in the
/// message if supplied.
///
///
/// returns:
/// An alert view to present.
+ (SGAlertView * _Nonnull)noEmailAccountWithRecipientEmail:(NSString * _Nullable)recipientEmail SWIFT_WARN_UNUSED_RESULT;
@end


@interface SGListing (SWIFT_EXTENSION(SeatGeekSDK))
@property (nonatomic, readonly, copy) NSString * _Nonnull localizedDisplayPriceText;
@property (nonatomic, readonly, copy) NSString * _Nonnull localizedDisplayFeesText;
@property (nonatomic, readonly, copy) NSString * _Nonnull localizedServerDisplayPriceText;
@property (nonatomic, readonly, copy) NSString * _Nonnull localizedSeatGeekDisplayPriceText;
@end


/// SGMyTickets is a wrapper around MyTickets to expose it to Objective-C
SWIFT_CLASS("_TtC11SeatGeekSDK11SGMyTickets")
@interface SGMyTickets : NSObject
/// If priority is required, refresh happens immediately.  If non required, requests accumulate and a single refresh occurs after a short delay
+ (void)refreshWith:(enum SGMyTicketsRefreshPriority)priority;
/// If priority is required, refresh happens immediately.  If non required, requests accumulate and a single refresh occurs after a short delay
+ (void)refreshWith:(enum SGMyTicketsRefreshPriority)priority onCompletion:(void (^ _Nonnull)(BOOL))onCompletion;
+ (void)clear;
+ (void)onDidLoadWithOwner:(id _Nonnull)owner :(void (^ _Nonnull)(void))do_;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger numberOfIncomingTranfers;)
+ (NSInteger)numberOfIncomingTranfers SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) BOOL hasTakeoverEvent;)
+ (BOOL)hasTakeoverEvent SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSParagraphStyle;
@class UIFont;

/// SGTypestyle is a wrapper around Typestyle to expose it to Objective-C
SWIFT_CLASS_NAMED("SGObjcTypestyle")
@interface SGTypestyle : NSObject
/// Objective-C doesn’t support nil value types, so let’s use NSNumber
@property (nonatomic, readonly, strong) NSNumber * _Nullable lineHeight;
@property (nonatomic, readonly, strong) NSParagraphStyle * _Nonnull paragraphStyle;
@property (nonatomic, readonly, strong) UIFont * _Nonnull font;
@property (nonatomic, readonly, strong) UIColor * _Nonnull textColor;
@property (nonatomic, readonly, strong) NSDictionary * _Nonnull textAttributes;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface SGTypestyle (SWIFT_EXTENSION(SeatGeekSDK))
- (SGTypestyle * _Nonnull (^ _Nonnull)(UIColor * _Nonnull))withColor SWIFT_WARN_UNUSED_RESULT;
- (SGTypestyle * _Nonnull)withColor:(UIColor * _Nonnull)color SWIFT_WARN_UNUSED_RESULT;
- (SGTypestyle * _Nonnull (^ _Nonnull)(NSTextAlignment))withTextAlignment SWIFT_WARN_UNUSED_RESULT;
- (SGTypestyle * _Nonnull)withTextAlignment:(NSTextAlignment)alignment SWIFT_WARN_UNUSED_RESULT;
- (SGTypestyle * _Nonnull (^ _Nonnull)(NSLineBreakMode))withLineBreakMode SWIFT_WARN_UNUSED_RESULT;
- (SGTypestyle * _Nonnull)withLineBreakMode:(NSLineBreakMode)lineBreakMode SWIFT_WARN_UNUSED_RESULT;
@end


@interface SGTypestyle (SWIFT_EXTENSION(SeatGeekSDK))
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SGTypestyle * _Nonnull graphLabel;)
+ (SGTypestyle * _Nonnull)graphLabel SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SGTypestyle * _Nonnull dealScore;)
+ (SGTypestyle * _Nonnull)dealScore SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SGTypestyle * _Nonnull priceDrop;)
+ (SGTypestyle * _Nonnull)priceDrop SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SGTypestyle * _Nonnull trendingRank;)
+ (SGTypestyle * _Nonnull)trendingRank SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SGTypestyle * _Nonnull trendingNewLabel;)
+ (SGTypestyle * _Nonnull)trendingNewLabel SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SGTypestyle * _Nonnull text4InterfaceThin;)
+ (SGTypestyle * _Nonnull)text4InterfaceThin SWIFT_WARN_UNUSED_RESULT;
@end


@interface SGTypestyle (SWIFT_EXTENSION(SeatGeekSDK))
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SGTypestyle * _Nonnull heading1;)
+ (SGTypestyle * _Nonnull)heading1 SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SGTypestyle * _Nonnull heading2;)
+ (SGTypestyle * _Nonnull)heading2 SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SGTypestyle * _Nonnull heading3;)
+ (SGTypestyle * _Nonnull)heading3 SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SGTypestyle * _Nonnull heading4;)
+ (SGTypestyle * _Nonnull)heading4 SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SGTypestyle * _Nonnull subtitle;)
+ (SGTypestyle * _Nonnull)subtitle SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SGTypestyle * _Nonnull terms;)
+ (SGTypestyle * _Nonnull)terms SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SGTypestyle * _Nonnull text1Default;)
+ (SGTypestyle * _Nonnull)text1Default SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SGTypestyle * _Nonnull text1Strong;)
+ (SGTypestyle * _Nonnull)text1Strong SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SGTypestyle * _Nonnull text2Default;)
+ (SGTypestyle * _Nonnull)text2Default SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SGTypestyle * _Nonnull text2Strong;)
+ (SGTypestyle * _Nonnull)text2Strong SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SGTypestyle * _Nonnull text3Default;)
+ (SGTypestyle * _Nonnull)text3Default SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SGTypestyle * _Nonnull text3Strong;)
+ (SGTypestyle * _Nonnull)text3Strong SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SGTypestyle * _Nonnull text4Default;)
+ (SGTypestyle * _Nonnull)text4Default SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SGTypestyle * _Nonnull text4Strong;)
+ (SGTypestyle * _Nonnull)text4Strong SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SGTypestyle * _Nonnull uppercase;)
+ (SGTypestyle * _Nonnull)uppercase SWIFT_WARN_UNUSED_RESULT;
@end








/// A UITextField subclass with overrides specific to SeatGeek
SWIFT_CLASS_NAMED("SearchField")
@interface SGSearchField : UITextField
- (CGRect)clearButtonRectForBounds:(CGRect)bounds SWIFT_WARN_UNUSED_RESULT;
- (CGRect)placeholderRectForBounds:(CGRect)bounds SWIFT_WARN_UNUSED_RESULT;
- (CGRect)borderRectForBounds:(CGRect)bounds SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) CGSize intrinsicContentSize;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("SelectableListRowView")
@interface SGSelectableListRowView : SGVerticalListRowView
@property (nonatomic, copy) NSString * _Nullable title;
@property (nonatomic, copy) NSString * _Nullable subtitle;
@property (nonatomic, copy) NSString * _Nullable decoratorText;
@property (nonatomic, copy) NSString * _Nullable descriptionText;
@property (nonatomic, getter=isSelected) BOOL selected;
@property (nonatomic, copy) NSString * _Nullable leftImageName;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS_NAMED("StatelessCheckoutAPIService")
@interface SGKStatelessCheckoutAPIService : NSObject <SGKCheckoutAPIService>
- (void)addDiscountWithCode:(NSString * _Nonnull)code eventID:(NSString * _Nullable)eventID marketName:(NSString * _Nullable)marketName completion:(void (^ _Nonnull)(SGCodeValidationResponse * _Nonnull))completion;
- (void)abandonCartWithPurchase:(SGCheckoutPurchase * _Nonnull)purchase;
- (void)fetchSummaryThenDoWithPurchase:(SGCheckoutPurchase * _Nonnull)purchase success:(MGBlock _Nullable)success fail:(SGAPIFailBlock _Nullable)fail;
- (void)submitThenDoWithPurchase:(SGCheckoutPurchase * _Nonnull)purchase success:(MGBlock _Nullable)success fail:(SGAPIFailBlock _Nullable)fail;
- (void)selectAddonWithPurchase:(SGCheckoutPurchase * _Nonnull)purchase success:(MGBlock _Null_unspecified)success fail:(SGAPIFailBlock _Null_unspecified)fail;
- (void)addPaymentMethodWithPaymentMethod:(SGPaymentMethodSpreedly * _Nonnull)paymentMethod isSandbox:(BOOL)isSandbox success:(MGBlockWithContext _Null_unspecified)success fail:(SGAPIFailBlock _Null_unspecified)fail;
- (void)deletePaymentMethodWithPaymentMethod:(SGPaymentMethodSpreedly * _Nonnull)paymentMethod fail:(SGAPIFailBlock _Null_unspecified)fail;
- (void)updateAcknowledgementsWithPurchase:(SGCheckoutPurchase * _Nonnull)purchase success:(void (^ _Nullable)(void))success fail:(void (^ _Nullable)(NSArray<SGAPIError *> * _Nullable))fail;
- (void)updateContactWithPurchase:(SGCheckoutPurchase * _Nonnull)purchase success:(void (^ _Nullable)(void))success fail:(void (^ _Nullable)(NSArray<SGAPIError *> * _Nullable))fail;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class UINavigationController;

SWIFT_CLASS("_TtC11SeatGeekSDK26StripeVerifyViewController")
@interface StripeVerifyViewController : UIViewController <UINavigationControllerDelegate>
@property (nonatomic, strong) SGPayoutMethod * _Nullable payoutMethod;
@property (nonatomic, copy) void (^ _Nullable confirmationBlock)(StripeVerifyViewController * _Nonnull);
- (void)navigationController:(UINavigationController * _Nonnull)navigationController willShowViewController:(UIViewController * _Nonnull)viewController animated:(BOOL)animated;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


@class UIWindow;

@interface UIApplication (SWIFT_EXTENSION(SeatGeekSDK))
@property (nonatomic, readonly, strong) UIWindow * _Nullable firstKeyWindow;
@end











@interface UIColor (SWIFT_EXTENSION(SeatGeekSDK))
- (nonnull instancetype)initWithHex:(uint32_t)hex;
- (nonnull instancetype)initWithHex:(uint32_t)hex alpha:(CGFloat)alpha;
- (nullable instancetype)initWithHexString:(NSString * _Nullable)hexString;
- (UIColor * _Nonnull)interpolateTo:(UIColor * _Nonnull)color t:(CGFloat)t SWIFT_WARN_UNUSED_RESULT;
- (UIColor * _Nonnull)withOverlay:(UIColor * _Nonnull)overlay alpha:(CGFloat)alpha SWIFT_WARN_UNUSED_RESULT;
+ (UIColor * _Nonnull)listingColorForBucket:(enum SGListingColor)listingColor SWIFT_WARN_UNUSED_RESULT;
@end



@interface UIColor (SWIFT_EXTENSION(SeatGeekSDK))
/// 0x181818FF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgIconPrimary;)
+ (UIColor * _Nonnull)sgIconPrimary SWIFT_WARN_UNUSED_RESULT;
/// 0x181818EB
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgIconPrimaryHover;)
+ (UIColor * _Nonnull)sgIconPrimaryHover SWIFT_WARN_UNUSED_RESULT;
/// 0xFFFFFFFF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgIconPrimaryAlt;)
+ (UIColor * _Nonnull)sgIconPrimaryAlt SWIFT_WARN_UNUSED_RESULT;
/// 0xFFFFFFEB
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgIconPrimaryAltHover;)
+ (UIColor * _Nonnull)sgIconPrimaryAltHover SWIFT_WARN_UNUSED_RESULT;
/// 0x525252FF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgIconSecondary;)
+ (UIColor * _Nonnull)sgIconSecondary SWIFT_WARN_UNUSED_RESULT;
/// 0x767575FF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgIconTertiary;)
+ (UIColor * _Nonnull)sgIconTertiary SWIFT_WARN_UNUSED_RESULT;
/// 0xDD3C3CFF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgIconCritical;)
+ (UIColor * _Nonnull)sgIconCritical SWIFT_WARN_UNUSED_RESULT;
/// 0x11A669FF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgIconSuccess;)
+ (UIColor * _Nonnull)sgIconSuccess SWIFT_WARN_UNUSED_RESULT;
/// 0xF26A8FF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgIconWarning;)
+ (UIColor * _Nonnull)sgIconWarning SWIFT_WARN_UNUSED_RESULT;
/// 0xFF5B49FF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgIconSpecial;)
+ (UIColor * _Nonnull)sgIconSpecial SWIFT_WARN_UNUSED_RESULT;
/// 0xFF5B49EB
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgIconSpecialHover;)
+ (UIColor * _Nonnull)sgIconSpecialHover SWIFT_WARN_UNUSED_RESULT;
/// 0x76757599
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgIconDisabled;)
+ (UIColor * _Nonnull)sgIconDisabled SWIFT_WARN_UNUSED_RESULT;
/// 0xDEDDDBFF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgBorderPrimary;)
+ (UIColor * _Nonnull)sgBorderPrimary SWIFT_WARN_UNUSED_RESULT;
/// 0x000FF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgBorderPrimaryHover;)
+ (UIColor * _Nonnull)sgBorderPrimaryHover SWIFT_WARN_UNUSED_RESULT;
/// 0x000FF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgBorderPrimaryPressed;)
+ (UIColor * _Nonnull)sgBorderPrimaryPressed SWIFT_WARN_UNUSED_RESULT;
/// 0x000FF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgBorderPrimarySelected;)
+ (UIColor * _Nonnull)sgBorderPrimarySelected SWIFT_WARN_UNUSED_RESULT;
/// 0xFFFFFFFF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgBorderPrimaryAlt;)
+ (UIColor * _Nonnull)sgBorderPrimaryAlt SWIFT_WARN_UNUSED_RESULT;
/// 0xBA2626FF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgBorderCritical;)
+ (UIColor * _Nonnull)sgBorderCritical SWIFT_WARN_UNUSED_RESULT;
/// 0x0007A
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgBorderAccessible;)
+ (UIColor * _Nonnull)sgBorderAccessible SWIFT_WARN_UNUSED_RESULT;
/// 0xDEDDDBFF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgBorderDisabled;)
+ (UIColor * _Nonnull)sgBorderDisabled SWIFT_WARN_UNUSED_RESULT;
/// 0x181818FF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgTextPrimary;)
+ (UIColor * _Nonnull)sgTextPrimary SWIFT_WARN_UNUSED_RESULT;
/// 0xFFFFFFFF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgTextPrimaryAlt;)
+ (UIColor * _Nonnull)sgTextPrimaryAlt SWIFT_WARN_UNUSED_RESULT;
/// 0x525252FF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgTextSecondary;)
+ (UIColor * _Nonnull)sgTextSecondary SWIFT_WARN_UNUSED_RESULT;
/// 0x767575FF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgTextTertiary;)
+ (UIColor * _Nonnull)sgTextTertiary SWIFT_WARN_UNUSED_RESULT;
/// 0xBA2626FF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgTextCritical;)
+ (UIColor * _Nonnull)sgTextCritical SWIFT_WARN_UNUSED_RESULT;
/// 0xB84D0FF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgTextWarning;)
+ (UIColor * _Nonnull)sgTextWarning SWIFT_WARN_UNUSED_RESULT;
/// 0xB6F46FF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgTextSuccess;)
+ (UIColor * _Nonnull)sgTextSuccess SWIFT_WARN_UNUSED_RESULT;
/// 0xDB160FF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgTextSpecial;)
+ (UIColor * _Nonnull)sgTextSpecial SWIFT_WARN_UNUSED_RESULT;
/// 0xB6F46FF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgTextMoney;)
+ (UIColor * _Nonnull)sgTextMoney SWIFT_WARN_UNUSED_RESULT;
/// 0x181818FF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgTextLink;)
+ (UIColor * _Nonnull)sgTextLink SWIFT_WARN_UNUSED_RESULT;
/// 0x181818FF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgTextLinkHover;)
+ (UIColor * _Nonnull)sgTextLinkHover SWIFT_WARN_UNUSED_RESULT;
/// 0x181818FF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgTextLinkSelected;)
+ (UIColor * _Nonnull)sgTextLinkSelected SWIFT_WARN_UNUSED_RESULT;
/// 0x76757599
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgTextDisabled;)
+ (UIColor * _Nonnull)sgTextDisabled SWIFT_WARN_UNUSED_RESULT;
/// 0x1877F2FF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgSocialFacebook;)
+ (UIColor * _Nonnull)sgSocialFacebook SWIFT_WARN_UNUSED_RESULT;
/// 0xFF0BFFF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgSocialLyft;)
+ (UIColor * _Nonnull)sgSocialLyft SWIFT_WARN_UNUSED_RESULT;
/// 0xFFFC0FF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgSocialSnapchat;)
+ (UIColor * _Nonnull)sgSocialSnapchat SWIFT_WARN_UNUSED_RESULT;
/// 0x1DB954FF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgSocialSpotify;)
+ (UIColor * _Nonnull)sgSocialSpotify SWIFT_WARN_UNUSED_RESULT;
/// 0x1ED760FF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgSocialSpotifyLogo;)
+ (UIColor * _Nonnull)sgSocialSpotifyLogo SWIFT_WARN_UNUSED_RESULT;
/// 0x1DA1F2FF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgSocialTwitter;)
+ (UIColor * _Nonnull)sgSocialTwitter SWIFT_WARN_UNUSED_RESULT;
/// 0x21632FF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgMapAmazing;)
+ (UIColor * _Nonnull)sgMapAmazing SWIFT_WARN_UNUSED_RESULT;
/// 0x5381EFF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgMapGreat;)
+ (UIColor * _Nonnull)sgMapGreat SWIFT_WARN_UNUSED_RESULT;
/// 0x719F25FF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgMapGood;)
+ (UIColor * _Nonnull)sgMapGood SWIFT_WARN_UNUSED_RESULT;
/// 0xEAA50FF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgMapOkay;)
+ (UIColor * _Nonnull)sgMapOkay SWIFT_WARN_UNUSED_RESULT;
/// 0xF2697FF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgMapModerate;)
+ (UIColor * _Nonnull)sgMapModerate SWIFT_WARN_UNUSED_RESULT;
/// 0xDD3C3CFF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgMapDeluxe;)
+ (UIColor * _Nonnull)sgMapDeluxe SWIFT_WARN_UNUSED_RESULT;
/// 0xBA2626FF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgMapPremium;)
+ (UIColor * _Nonnull)sgMapPremium SWIFT_WARN_UNUSED_RESULT;
/// 0x587A8DFF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgMapNoDealScore;)
+ (UIColor * _Nonnull)sgMapNoDealScore SWIFT_WARN_UNUSED_RESULT;
/// 0x640CFFF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgMapPackage;)
+ (UIColor * _Nonnull)sgMapPackage SWIFT_WARN_UNUSED_RESULT;
/// 0x32067FF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgMapPackageHighlighted;)
+ (UIColor * _Nonnull)sgMapPackageHighlighted SWIFT_WARN_UNUSED_RESULT;
/// 0x1C71EFFF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgMapPrime;)
+ (UIColor * _Nonnull)sgMapPrime SWIFT_WARN_UNUSED_RESULT;
/// 0x056D6FF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgMapPrimeHighlighted;)
+ (UIColor * _Nonnull)sgMapPrimeHighlighted SWIFT_WARN_UNUSED_RESULT;
/// 0x1AA88BFF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgMapBest;)
+ (UIColor * _Nonnull)sgMapBest SWIFT_WARN_UNUSED_RESULT;
/// 0xE3E3E3FF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgMapExpired;)
+ (UIColor * _Nonnull)sgMapExpired SWIFT_WARN_UNUSED_RESULT;
/// 0x767676FF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgMapExpiredHighlighted;)
+ (UIColor * _Nonnull)sgMapExpiredHighlighted SWIFT_WARN_UNUSED_RESULT;
/// 0xDB160FF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgBrandPrimaryDark;)
+ (UIColor * _Nonnull)sgBrandPrimaryDark SWIFT_WARN_UNUSED_RESULT;
/// 0xFF5B49FF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgBrandPrimary;)
+ (UIColor * _Nonnull)sgBrandPrimary SWIFT_WARN_UNUSED_RESULT;
/// 0xFFA399FF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgBrandPrimaryLight56;)
+ (UIColor * _Nonnull)sgBrandPrimaryLight56 SWIFT_WARN_UNUSED_RESULT;
/// 0xFFD8D3FF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgBrandPrimaryLight24;)
+ (UIColor * _Nonnull)sgBrandPrimaryLight24 SWIFT_WARN_UNUSED_RESULT;
/// 0xFFF2F0FF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgBrandPrimaryLight08;)
+ (UIColor * _Nonnull)sgBrandPrimaryLight08 SWIFT_WARN_UNUSED_RESULT;
/// 0x000FF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgBrandSecondaryDark;)
+ (UIColor * _Nonnull)sgBrandSecondaryDark SWIFT_WARN_UNUSED_RESULT;
/// 0x181818FF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgBrandSecondary;)
+ (UIColor * _Nonnull)sgBrandSecondary SWIFT_WARN_UNUSED_RESULT;
/// 0xFFFFFFFF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgBackgroundPrimary;)
+ (UIColor * _Nonnull)sgBackgroundPrimary SWIFT_WARN_UNUSED_RESULT;
/// 0x000FF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgBackgroundPrimaryAlt;)
+ (UIColor * _Nonnull)sgBackgroundPrimaryAlt SWIFT_WARN_UNUSED_RESULT;
/// 0xF5F5F4FF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgBackgroundSecondary;)
+ (UIColor * _Nonnull)sgBackgroundSecondary SWIFT_WARN_UNUSED_RESULT;
/// 0xF8F7F5FF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgBackgroundTertiary;)
+ (UIColor * _Nonnull)sgBackgroundTertiary SWIFT_WARN_UNUSED_RESULT;
/// 0xFDF0F0FF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgBackgroundCritical;)
+ (UIColor * _Nonnull)sgBackgroundCritical SWIFT_WARN_UNUSED_RESULT;
/// 0xFEF3ECFF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgBackgroundWarning;)
+ (UIColor * _Nonnull)sgBackgroundWarning SWIFT_WARN_UNUSED_RESULT;
/// 0xECF8F3FF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgBackgroundSuccess;)
+ (UIColor * _Nonnull)sgBackgroundSuccess SWIFT_WARN_UNUSED_RESULT;
/// 0xBA2626FF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgBackgroundDestructive;)
+ (UIColor * _Nonnull)sgBackgroundDestructive SWIFT_WARN_UNUSED_RESULT;
/// 0x000FF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgBackgroundTooltip;)
+ (UIColor * _Nonnull)sgBackgroundTooltip SWIFT_WARN_UNUSED_RESULT;
/// 0x000CC
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgBackgroundOverlay;)
+ (UIColor * _Nonnull)sgBackgroundOverlay SWIFT_WARN_UNUSED_RESULT;
/// 0xF5F5F4FF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgBackgroundDisabled;)
+ (UIColor * _Nonnull)sgBackgroundDisabled SWIFT_WARN_UNUSED_RESULT;
/// 0xECEEF3FF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgBackgroundMap;)
+ (UIColor * _Nonnull)sgBackgroundMap SWIFT_WARN_UNUSED_RESULT;
/// 0x000FF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgBackgroundButtonPrimary;)
+ (UIColor * _Nonnull)sgBackgroundButtonPrimary SWIFT_WARN_UNUSED_RESULT;
/// 0x181818CC
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgBackgroundButtonPrimaryHover;)
+ (UIColor * _Nonnull)sgBackgroundButtonPrimaryHover SWIFT_WARN_UNUSED_RESULT;
/// 0x181818CC
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgBackgroundButtonPrimaryPressed;)
+ (UIColor * _Nonnull)sgBackgroundButtonPrimaryPressed SWIFT_WARN_UNUSED_RESULT;
/// 0xFFFFFFFF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgBackgroundButtonSecondary;)
+ (UIColor * _Nonnull)sgBackgroundButtonSecondary SWIFT_WARN_UNUSED_RESULT;
/// 0xFFFFFFEB
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgBackgroundButtonSecondaryHover;)
+ (UIColor * _Nonnull)sgBackgroundButtonSecondaryHover SWIFT_WARN_UNUSED_RESULT;
/// 0xFFFFFFFF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgBackgroundButtonSecondaryPressed;)
+ (UIColor * _Nonnull)sgBackgroundButtonSecondaryPressed SWIFT_WARN_UNUSED_RESULT;
/// 0xFFFFFFFF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgBackgroundControl;)
+ (UIColor * _Nonnull)sgBackgroundControl SWIFT_WARN_UNUSED_RESULT;
/// 0xFFFFFFFF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgBackgroundControlHover;)
+ (UIColor * _Nonnull)sgBackgroundControlHover SWIFT_WARN_UNUSED_RESULT;
/// 0xFFFFFFFF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgBackgroundControlPressed;)
+ (UIColor * _Nonnull)sgBackgroundControlPressed SWIFT_WARN_UNUSED_RESULT;
/// 0x181818FF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgBackgroundControlSelected;)
+ (UIColor * _Nonnull)sgBackgroundControlSelected SWIFT_WARN_UNUSED_RESULT;
/// 0x181818CC
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgBackgroundControlSelectedHover;)
+ (UIColor * _Nonnull)sgBackgroundControlSelectedHover SWIFT_WARN_UNUSED_RESULT;
/// 0x181818CC
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgBackgroundControlSelectedPressed;)
+ (UIColor * _Nonnull)sgBackgroundControlSelectedPressed SWIFT_WARN_UNUSED_RESULT;
/// 0xDEDDDBFF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgDividerDividerApps;)
+ (UIColor * _Nonnull)sgDividerDividerApps SWIFT_WARN_UNUSED_RESULT;
/// 0x00014
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgDividerDividerWeb;)
+ (UIColor * _Nonnull)sgDividerDividerWeb SWIFT_WARN_UNUSED_RESULT;
/// 0x000FF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgOpacityBlack100;)
+ (UIColor * _Nonnull)sgOpacityBlack100 SWIFT_WARN_UNUSED_RESULT;
/// 0x000CC
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgOpacityBlack80;)
+ (UIColor * _Nonnull)sgOpacityBlack80 SWIFT_WARN_UNUSED_RESULT;
/// 0x000A3
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgOpacityBlack64;)
+ (UIColor * _Nonnull)sgOpacityBlack64 SWIFT_WARN_UNUSED_RESULT;
/// 0x0007A
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgOpacityBlack48;)
+ (UIColor * _Nonnull)sgOpacityBlack48 SWIFT_WARN_UNUSED_RESULT;
/// 0x00052
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgOpacityBlack32;)
+ (UIColor * _Nonnull)sgOpacityBlack32 SWIFT_WARN_UNUSED_RESULT;
/// 0x0003D
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgOpacityBlack24;)
+ (UIColor * _Nonnull)sgOpacityBlack24 SWIFT_WARN_UNUSED_RESULT;
/// 0x00029
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgOpacityBlack16;)
+ (UIColor * _Nonnull)sgOpacityBlack16 SWIFT_WARN_UNUSED_RESULT;
/// 0x0001F
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgOpacityBlack12;)
+ (UIColor * _Nonnull)sgOpacityBlack12 SWIFT_WARN_UNUSED_RESULT;
/// 0x00014
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgOpacityBlack08;)
+ (UIColor * _Nonnull)sgOpacityBlack08 SWIFT_WARN_UNUSED_RESULT;
/// 0x0000
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgOpacityBlack0;)
+ (UIColor * _Nonnull)sgOpacityBlack0 SWIFT_WARN_UNUSED_RESULT;
/// 0xFFFFFF14
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgOpacityWhite08;)
+ (UIColor * _Nonnull)sgOpacityWhite08 SWIFT_WARN_UNUSED_RESULT;
/// 0xFFFFFF1F
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgOpacityWhite12;)
+ (UIColor * _Nonnull)sgOpacityWhite12 SWIFT_WARN_UNUSED_RESULT;
/// 0xFFFFFF29
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgOpacityWhite16;)
+ (UIColor * _Nonnull)sgOpacityWhite16 SWIFT_WARN_UNUSED_RESULT;
/// 0xFFFFFF3D
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgOpacityWhite24;)
+ (UIColor * _Nonnull)sgOpacityWhite24 SWIFT_WARN_UNUSED_RESULT;
/// 0xFFFFFF52
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgOpacityWhite32;)
+ (UIColor * _Nonnull)sgOpacityWhite32 SWIFT_WARN_UNUSED_RESULT;
/// 0xFFFFFF7A
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgOpacityWhite48;)
+ (UIColor * _Nonnull)sgOpacityWhite48 SWIFT_WARN_UNUSED_RESULT;
/// 0xFFFFFFA3
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgOpacityWhite64;)
+ (UIColor * _Nonnull)sgOpacityWhite64 SWIFT_WARN_UNUSED_RESULT;
/// 0xFFFFFFCC
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgOpacityWhite80;)
+ (UIColor * _Nonnull)sgOpacityWhite80 SWIFT_WARN_UNUSED_RESULT;
/// 0xFFFFFFFF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgOpacityWhite100;)
+ (UIColor * _Nonnull)sgOpacityWhite100 SWIFT_WARN_UNUSED_RESULT;
@end


@interface UIFont (SWIFT_EXTENSION(SeatGeekSDK))
+ (UIFont * _Nonnull)systemFontWithWeighted:(UIFontWeight)weight SWIFT_WARN_UNUSED_RESULT;
+ (UIFont * _Nonnull)sfFontOfSize:(CGFloat)size weight:(UIFontWeight)weight SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIFont * _Nonnull acknowledgementDefaultFont;)
+ (UIFont * _Nonnull)acknowledgementDefaultFont SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIFont * _Nonnull acknowledgementLinkFont;)
+ (UIFont * _Nonnull)acknowledgementLinkFont SWIFT_WARN_UNUSED_RESULT;
/// Preserves font traits and adds a bold trait if it does not exist
///
/// returns:
/// A bold version of the font if one exists in the font family
- (UIFont * _Nonnull)setBold SWIFT_WARN_UNUSED_RESULT;
@end



@interface UIImage (SWIFT_EXTENSION(SeatGeekSDK))
- (UIImage * _Nonnull)sgk_coloredWithColor:(UIColor * _Nonnull)color SWIFT_WARN_UNUSED_RESULT;
- (UIImage * _Nonnull)sgk_imageByAddingWithImages:(NSArray<UIImage *> * _Nonnull)images SWIFT_WARN_UNUSED_RESULT;
+ (UIImage * _Nonnull)sgk_clockIcon SWIFT_WARN_UNUSED_RESULT;
@end







@interface UINavigationBar (SWIFT_EXTENSION(SeatGeekSDK))
- (void)sg_configureWithWhiteBackground;
@end


@interface UINavigationItem (SWIFT_EXTENSION(SeatGeekSDK))
@property (nonatomic, strong) SGNavBarButton * _Nullable leftBarButton;
@property (nonatomic, copy) NSArray<SGNavBarButton *> * _Nullable leftBarButtons;
@property (nonatomic, strong) SGNavBarButton * _Nullable rightBarButton;
@property (nonatomic, copy) NSArray<SGNavBarButton *> * _Nullable rightBarButtons;
@end



@interface UIScrollView (SWIFT_EXTENSION(SeatGeekSDK))
- (void)sgk_scrollToTopAnimated:(BOOL)animated;
- (void)sgk_scrollToBottomAnimated:(BOOL)animated;
@property (nonatomic, readonly) CGFloat sgk_heightWithoutInsets;
@property (nonatomic, readonly) BOOL sgk_isScrolledToTop;
@end



@interface UIStackView (SWIFT_EXTENSION(SeatGeekSDK))
- (UIView * _Nonnull)sgk_addSpaceWithHeight:(CGFloat)height;
- (void)sgk_removeAllArrangedSubviews;
@end


@interface UIStoryboard (SWIFT_EXTENSION(SeatGeekSDK))
/// Instantiates a DebugViewController
+ (SGCreditCardScannerViewController * _Nonnull)instantiateCreditCardScannerViewController SWIFT_WARN_UNUSED_RESULT;
@end


@interface UIStoryboard (SWIFT_EXTENSION(SeatGeekSDK))
/// Instantiates a StripeVerifyViewController
+ (StripeVerifyViewController * _Nonnull)instantiateStripeVerifyViewControllerWithPayoutMethod:(SGPayoutMethod * _Nonnull)payoutMethod SWIFT_WARN_UNUSED_RESULT;
@end







@interface UIView (SWIFT_EXTENSION(SeatGeekSDK))
- (void)sgk_roundTopCorners;
- (void)sgk_roundTopCornersWithYOffset:(CGFloat)yOffset;
@end




@interface UIView (SWIFT_EXTENSION(SeatGeekSDK))
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIView * _Nonnull sgk_keyline;)
+ (UIView * _Nonnull)sgk_keyline SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIView * _Nonnull sgk_verticalKeyline;)
+ (UIView * _Nonnull)sgk_verticalKeyline SWIFT_WARN_UNUSED_RESULT;
+ (UIView * _Nonnull)sgk_separatorView SWIFT_WARN_UNUSED_RESULT;
@end




@class UITextPosition;

SWIFT_CLASS("_TtC11SeatGeekSDK19UnderlinedTextField")
@interface UnderlinedTextField : UITextField
@property (nonatomic, copy) NSString * _Nullable placeholder;
@property (nonatomic, copy) NSString * _Nullable errorMessage;
@property (nonatomic) BOOL shouldHideCaret;
@property (nonatomic, readonly) CGSize intrinsicContentSize;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (void)layoutSubviews;
- (CGSize)sizeThatFits:(CGSize)size SWIFT_WARN_UNUSED_RESULT;
- (BOOL)becomeFirstResponder SWIFT_WARN_UNUSED_RESULT;
- (BOOL)resignFirstResponder SWIFT_WARN_UNUSED_RESULT;
- (CGRect)textRectForBounds:(CGRect)bounds SWIFT_WARN_UNUSED_RESULT;
- (CGRect)editingRectForBounds:(CGRect)bounds SWIFT_WARN_UNUSED_RESULT;
- (CGRect)placeholderRectForBounds:(CGRect)bounds SWIFT_WARN_UNUSED_RESULT;
- (CGRect)clearButtonRectForBounds:(CGRect)bounds SWIFT_WARN_UNUSED_RESULT;
- (CGRect)leftViewRectForBounds:(CGRect)bounds SWIFT_WARN_UNUSED_RESULT;
- (CGRect)rightViewRectForBounds:(CGRect)bounds SWIFT_WARN_UNUSED_RESULT;
- (CGRect)borderRectForBounds:(CGRect)bounds SWIFT_WARN_UNUSED_RESULT;
- (CGRect)caretRectForPosition:(UITextPosition * _Nonnull)position SWIFT_WARN_UNUSED_RESULT;
- (BOOL)canPerformAction:(SEL _Nonnull)action withSender:(id _Nullable)sender SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS_NAMED("UpcomingEvent")
@interface SGKUpcomingEvent : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("UpcomingEventDataSource")
@interface SGKUpcomingEventDataSource : NSObject
- (void)fetchUpcomingEvent;
- (void)onFetchUpcomingEvent:(void (^ _Nonnull)(SGKUpcomingEvent * _Nullable, NSError * _Nullable))completionBlock;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM_NAMED(NSInteger, SGKUpcomingEventError, "UpcomingEventError", open) {
  SGKUpcomingEventErrorUserLoggedOut = -1,
  SGKUpcomingEventErrorNetworkError = -2,
  SGKUpcomingEventErrorNoEventFound = -3,
};




SWIFT_CLASS_NAMED("VerticalListView")
@interface SGVerticalListView : UIScrollView
@property (nonatomic, readonly) BOOL isEditing;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) BOOL requiresConstraintBasedLayout;)
+ (BOOL)requiresConstraintBasedLayout SWIFT_WARN_UNUSED_RESULT;
- (NSArray<SGVerticalListRowView *> * _Nonnull)rows SWIFT_WARN_UNUSED_RESULT;
- (void)addView:(SGVerticalListRowView * _Nonnull)view;
- (void)reset;
- (void)deleteRow:(SGVerticalListRowView * _Nonnull)row animated:(BOOL)animated;
- (void)setEditing:(BOOL)editing animated:(BOOL)animated;
@end


SWIFT_CLASS_NAMED("WebViewController")
@interface SGWebViewController : UIViewController
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SGWebViewController * _Nonnull buyerGuarantee;)
+ (SGWebViewController * _Nonnull)buyerGuarantee SWIFT_WARN_UNUSED_RESULT;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
- (void)viewDidLoad;
- (void)viewSafeAreaInsetsDidChange;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end


@interface SGWebViewController (SWIFT_EXTENSION(SeatGeekSDK)) <MFMailComposeViewControllerDelegate>
- (void)mailComposeController:(MFMailComposeViewController * _Nonnull)controller didFinishWithResult:(MFMailComposeResult)result error:(NSError * _Nullable)error;
@end

@class WKWebViewConfiguration;
@class WKWindowFeatures;

@interface SGWebViewController (SWIFT_EXTENSION(SeatGeekSDK)) <WKUIDelegate>
- (WKWebView * _Nullable)webView:(WKWebView * _Nonnull)webView createWebViewWithConfiguration:(WKWebViewConfiguration * _Nonnull)configuration forNavigationAction:(WKNavigationAction * _Nonnull)navigationAction windowFeatures:(WKWindowFeatures * _Nonnull)windowFeatures SWIFT_WARN_UNUSED_RESULT;
@end

@class WKNavigation;

@interface SGWebViewController (SWIFT_EXTENSION(SeatGeekSDK)) <WKNavigationDelegate>
- (void)webView:(WKWebView * _Nonnull)webView didCommitNavigation:(WKNavigation * _Null_unspecified)didCommit;
- (void)webView:(WKWebView * _Nonnull)webView didFailNavigation:(WKNavigation * _Null_unspecified)didFail withError:(NSError * _Nonnull)withError;
- (void)webView:(WKWebView * _Nonnull)webView decidePolicyForNavigationAction:(WKNavigationAction * _Nonnull)navigationAction decisionHandler:(SWIFT_NOESCAPE void (^ _Nonnull)(WKNavigationActionPolicy))decisionHandler;
@end

#endif
#if defined(__cplusplus)
#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#elif defined(__x86_64__) && __x86_64__
// Generated by Apple Swift version 5.7 (swiftlang-5.7.0.127.4 clang-1400.0.29.50)
#ifndef SEATGEEKSDK_SWIFT_H
#define SEATGEEKSDK_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wduplicate-method-match"
#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if defined(__cplusplus)
#if !defined(SWIFT_NOEXCEPT)
# define SWIFT_NOEXCEPT noexcept
#endif
#else
#if !defined(SWIFT_NOEXCEPT)
# define SWIFT_NOEXCEPT 
#endif
#endif
#if defined(__cplusplus)
#if !defined(SWIFT_CXX_INT_DEFINED)
#define SWIFT_CXX_INT_DEFINED
namespace swift {
using Int = ptrdiff_t;
using UInt = size_t;
}
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import AVFoundation;
@import CoreFoundation;
@import CoreMedia;
@import Foundation;
@import MapKit;
@import MessageUI;
@import ObjectiveC;
@import QuartzCore;
@import UIKit;
@import WebKit;
#endif

#import <SeatGeekSDK/SeatGeekSDK.h>

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="SeatGeekSDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)
@class NSString;
@class UIColor;

/// An interface to provide various SGAPIPrivate-based statuses with their SGKDesignKit colors
SWIFT_CLASS_NAMED("APIPrivateColorProvider")
@interface SGKAPIPrivateColorProvider : NSObject
+ (UIColor * _Nonnull)fulfillmentStatusColorWithStatusString:(NSString * _Nonnull)statusString SWIFT_WARN_UNUSED_RESULT;
+ (UIColor * _Nonnull)ingestionStatusColorWithStatusString:(NSString * _Nonnull)statusString SWIFT_WARN_UNUSED_RESULT;
+ (UIColor * _Nonnull)payoutStatusColorWithStatusString:(NSString * _Nonnull)statusString SWIFT_WARN_UNUSED_RESULT;
+ (UIColor * _Nonnull)transferStatusColorWithStatusString:(NSString * _Nonnull)statusString SWIFT_WARN_UNUSED_RESULT;
+ (UIColor * _Nonnull)promotionAccentColorWithType:(SGKPromotionType)type SWIFT_WARN_UNUSED_RESULT;
+ (UIColor * _Nonnull)timelineEntryColorWithMood:(SGKPurchaseTimelineEntryStatusMood)mood SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("APIValidatorPayoutBankInstitutionNumber")
@interface SGKAPIValidatorPayoutBankInstitutionNumber : SGAPIValidator
+ (NSString * _Null_unspecified)validationErrorFor:(NSString * _Null_unspecified)string context:(id _Null_unspecified)context compact:(BOOL)compact SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("APIValidatorPayoutBankRoutingNumber")
@interface SGKAPIValidatorPayoutBankRoutingNumber : SGAPIValidator
+ (NSString * _Null_unspecified)validationErrorFor:(NSString * _Null_unspecified)string context:(id _Null_unspecified)context compact:(BOOL)compact SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("APIValidatorPayoutBankTransitNumber")
@interface SGKAPIValidatorPayoutBankTransitNumber : SGAPIValidator
+ (NSString * _Null_unspecified)validationErrorFor:(NSString * _Null_unspecified)string context:(id _Null_unspecified)context compact:(BOOL)compact SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC11SeatGeekSDK21APIValidatorPayoutEIN")
@interface APIValidatorPayoutEIN : SGAPIValidator
+ (NSString * _Null_unspecified)validationErrorFor:(NSString * _Null_unspecified)string context:(id _Null_unspecified)context compact:(BOOL)compact SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("APIValidatorZip")
@interface SGAPIValidatorZip : SGAPIValidator
+ (NSString * _Null_unspecified)validationErrorFor:(NSString * _Null_unspecified)zipcode context:(id _Null_unspecified)context compact:(BOOL)compact SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSCoder;
enum SGActionButtonColorStyle : NSInteger;
enum SGActionButtonSizeStyle : NSInteger;
@class SGTypestyle;
@class NSAttributedString;

SWIFT_CLASS_NAMED("ActionButton")
@interface SGActionButton : UIButton
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
+ (SGActionButton * _Nonnull)button SWIFT_WARN_UNUSED_RESULT;
- (void)setColorStyle:(enum SGActionButtonColorStyle)style;
- (void)setSizeStyle:(enum SGActionButtonSizeStyle)style;
- (SGTypestyle * _Nonnull)labelTypestyle SWIFT_WARN_UNUSED_RESULT;
- (void)layoutSubviews;
@property (nonatomic, getter=isHighlighted) BOOL highlighted;
@property (nonatomic, getter=isEnabled) BOOL enabled;
- (void)setTitle:(NSString * _Nullable)title forState:(UIControlState)state;
- (void)setAttributedTitle:(NSAttributedString * _Nullable)title forState:(UIControlState)state;
- (void)setPreferredLongTitle:(NSString * _Nullable)title for:(UIControlState)state;
@end


@interface SGActionButton (SWIFT_EXTENSION(SeatGeekSDK))
@end

typedef SWIFT_ENUM_NAMED(NSInteger, SGActionButtonSizeStyle, "SizeStyle", open) {
  SGActionButtonSizeStyleFullWidth = 0,
  SGActionButtonSizeStylePrimary = 1,
  SGActionButtonSizeStyleSecondary = 2,
  SGActionButtonSizeStyleNone = 3,
};


@interface SGActionButton (SWIFT_EXTENSION(SeatGeekSDK))
@end

typedef SWIFT_ENUM_NAMED(NSInteger, SGActionButtonColorStyle, "ColorStyle", open) {
  SGActionButtonColorStyleIconPrimary = 0,
  SGActionButtonColorStyleGreen = 1,
  SGActionButtonColorStyleLight = 2,
  SGActionButtonColorStyleDisabled = 3,
  SGActionButtonColorStyleNone = 4,
};

@class UIViewController;
@class UIView;
@class NSBundle;

SWIFT_CLASS_NAMED("BottomNavigatorChildControllerWrapper")
@interface SGBottomNavigatorChildControllerWrapper : SGNavigatorChildController
- (void)wrap:(UIViewController * _Nonnull)controller;
- (UIView * _Nullable)footer SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end



@interface NSBundle (SWIFT_EXTENSION(SeatGeekSDK))
/// Returns the build number
/// In a build versioned as 14.6.0 (4000), this method returns the 4000 part
@property (nonatomic, readonly, copy) NSString * _Nonnull buildNumber;
/// Returns the build version
/// In a build versioned as 14.6.0 (4000), this method returns the 14.6.0 part
@property (nonatomic, readonly, copy) NSString * _Nonnull buildVersion;
@property (nonatomic, readonly) BOOL isTestFlight;
@end

enum ButtonStyle : NSInteger;
enum ButtonColorType : NSInteger;

SWIFT_CLASS_NAMED("Button")
@interface SGKButton : UIButton
- (nonnull instancetype)initWithStyle:(enum ButtonStyle)style colorType:(enum ButtonColorType)colorType OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
@property (nonatomic, getter=isEnabled) BOOL enabled;
@property (nonatomic, getter=isHighlighted) BOOL highlighted;
- (void)setTitle:(NSString * _Nullable)title;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


typedef SWIFT_ENUM(NSInteger, ButtonColorType, open) {
  ButtonColorTypeActionPrimary = 0,
  ButtonColorTypeGreen = 1,
  ButtonColorTypeRed = 2,
  ButtonColorTypeLight = 3,
  ButtonColorTypeCustom = 4,
};

typedef SWIFT_ENUM(NSInteger, ButtonStyle, open) {
  ButtonStyleButton1 = 0,
  ButtonStyleButton2 = 1,
  ButtonStyleButton3 = 2,
};


@interface CALayer (SWIFT_EXTENSION(SeatGeekSDK))
/// round the corners in the order of top left, top right, bottom right, bottom left
- (void)sgk_roundCornersWithRadii:(NSArray<NSNumber *> * _Nonnull)radii fillColor:(UIColor * _Nonnull)fillColor borderWidth:(CGFloat)borderWidth borderColor:(UIColor * _Nonnull)borderColor;
@end

@class SGCodeValidationResponse;
@class SGCheckoutPurchase;
@class SGPaymentMethodSpreedly;
@class SGAPIError;

SWIFT_PROTOCOL_NAMED("CheckoutAPIService")
@protocol SGKCheckoutAPIService
- (void)addDiscountWithCode:(NSString * _Nonnull)code eventID:(NSString * _Nullable)eventID marketName:(NSString * _Nullable)marketName completion:(void (^ _Nonnull)(SGCodeValidationResponse * _Nonnull))completion;
- (void)fetchSummaryThenDoWithPurchase:(SGCheckoutPurchase * _Nonnull)purchase success:(MGBlock _Nullable)success fail:(SGAPIFailBlock _Nullable)fail;
- (void)submitThenDoWithPurchase:(SGCheckoutPurchase * _Nonnull)purchase success:(MGBlock _Nullable)success fail:(SGAPIFailBlock _Nullable)fail;
- (void)abandonCartWithPurchase:(SGCheckoutPurchase * _Nonnull)purchase;
- (void)selectAddonWithPurchase:(SGCheckoutPurchase * _Nonnull)purchase success:(MGBlock _Null_unspecified)success fail:(SGAPIFailBlock _Null_unspecified)fail;
- (void)addPaymentMethodWithPaymentMethod:(SGPaymentMethodSpreedly * _Nonnull)paymentMethod isSandbox:(BOOL)isSandbox success:(MGBlockWithContext _Null_unspecified)success fail:(SGAPIFailBlock _Null_unspecified)fail;
- (void)deletePaymentMethodWithPaymentMethod:(SGPaymentMethodSpreedly * _Nonnull)paymentMethod fail:(SGAPIFailBlock _Null_unspecified)fail;
- (void)updateAcknowledgementsWithPurchase:(SGCheckoutPurchase * _Nonnull)purchase success:(void (^ _Nullable)(void))success fail:(void (^ _Nullable)(NSArray<SGAPIError *> * _Nullable))fail;
- (void)updateContactWithPurchase:(SGCheckoutPurchase * _Nonnull)purchase success:(void (^ _Nullable)(void))success fail:(void (^ _Nullable)(NSArray<SGAPIError *> * _Nullable))fail;
@end

@protocol SGKCheckoutAddressControllerDelegate;
@class SGKCheckoutAddressViewModel;
@protocol UIViewControllerTransitionCoordinator;
@protocol CheckoutViewModelProtocol;

/// Creates a textfield that supports auto suggest for addresses. Auto suggest logic is from:
/// https://developer.apple.com/documentation/mapkit/searching_for_nearby_points_of_interest
SWIFT_CLASS_NAMED("CheckoutAddressController")
@interface SGKCheckoutAddressController : SGCheckoutEditScreen
@property (nonatomic, weak) id <SGKCheckoutAddressControllerDelegate> _Nullable delegate;
- (nonnull instancetype)initWithViewModel:(SGKCheckoutAddressViewModel * _Nonnull)viewModel viewTitle:(NSString * _Nonnull)viewTitle OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewDidLoad;
- (void)viewWillTransitionToSize:(CGSize)size withTransitionCoordinator:(id <UIViewControllerTransitionCoordinator> _Nonnull)coordinator;
- (void)tappedBack;
- (null_unspecified instancetype)initWithCheckoutViewModel:(id <CheckoutViewModelProtocol> _Null_unspecified)checkoutViewModel SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end



@class UITextField;

@interface SGKCheckoutAddressController (SWIFT_EXTENSION(SeatGeekSDK)) <UITextViewDelegate>
- (BOOL)textFieldShouldReturn:(UITextField * _Nonnull)textField SWIFT_WARN_UNUSED_RESULT;
@end

@class UITableView;
@class NSIndexPath;

@interface SGKCheckoutAddressController (SWIFT_EXTENSION(SeatGeekSDK)) <UITableViewDelegate>
- (void)tableView:(UITableView * _Nonnull)tableView didSelectRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
@end

@class SGSearchBar;

@interface SGKCheckoutAddressController (SWIFT_EXTENSION(SeatGeekSDK)) <SGSearchBarDelegate>
- (void)searchBar:(SGSearchBar * _Null_unspecified)searchBar textDidChange:(NSString * _Null_unspecified)searchText;
- (void)searchBarTextDidBeginEditing:(SGSearchBar * _Null_unspecified)searchBar;
@end

@class UITableViewCell;

@interface SGKCheckoutAddressController (SWIFT_EXTENSION(SeatGeekSDK)) <UITableViewDataSource>
- (NSInteger)numberOfSectionsInTableView:(UITableView * _Nonnull)tableView SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)tableView:(UITableView * _Nonnull)tableView numberOfRowsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UITableViewCell * _Nonnull)tableView:(UITableView * _Nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_PROTOCOL_NAMED("CheckoutAddressControllerDelegate")
@protocol SGKCheckoutAddressControllerDelegate
- (void)checkoutAddressController:(SGKCheckoutAddressController * _Nonnull)checkoutAddressController didUpdateAddressFromAutoSuggest:(NSString * _Nullable)text;
- (void)checkoutAddressController:(SGKCheckoutAddressController * _Nonnull)checkoutAddressController didUpdateCityFromAutoSuggest:(NSString * _Nullable)text;
- (void)checkoutAddressController:(SGKCheckoutAddressController * _Nonnull)checkoutAddressController didUpdateStateFromAutoSuggest:(NSString * _Nullable)text;
- (void)checkoutAddressController:(SGKCheckoutAddressController * _Nonnull)checkoutAddressController didUpdateZipCodeFromAutoSuggest:(NSString * _Nullable)text;
@end


SWIFT_CLASS_NAMED("CheckoutAddressViewModel")
@interface SGKCheckoutAddressViewModel : NSObject
- (nonnull instancetype)initWithInitialStreetAddress:(NSString * _Nonnull)initialStreetAddress OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class MKLocalSearchCompleter;

@interface SGKCheckoutAddressViewModel (SWIFT_EXTENSION(SeatGeekSDK)) <MKLocalSearchCompleterDelegate>
- (void)completerDidUpdateResults:(MKLocalSearchCompleter * _Nonnull)completer;
- (void)completer:(MKLocalSearchCompleter * _Nonnull)completer didFailWithError:(NSError * _Nonnull)error;
@end

@class UIScrollView;
@class SGGradientView;

/// A base footer view designed to be used at the bottom of card-style sheet and list views.
SWIFT_CLASS("_TtC11SeatGeekSDK14ListFooterView")
@interface ListFooterView : UIView
/// The scroll view to observe for UI updates based on position.
@property (nonatomic, weak) UIScrollView * _Nullable scrollView;
/// The top shadow view that appears when <code>scrollView</code> has content to scroll and hasn’t reached the bottom.
@property (nonatomic, readonly, strong) SGGradientView * _Nonnull topShadow;
/// The separator keyline view that appears when <code>scrollView</code> either can’t scroll or has reached the bottom.
@property (nonatomic, readonly, strong) UIView * _Nonnull separator;
/// Designated initializer for <code>ListFooterView</code>.
/// \param frame The frame to use for this view.
///
/// \param scrollView The scroll view to observe for UI updates. Defaults to nil.
///
- (nonnull instancetype)initWithFrame:(CGRect)frame scrollView:(UIScrollView * _Nullable)scrollView OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end

@class UILabel;

SWIFT_CLASS("_TtC11SeatGeekSDK18CheckoutFooterView")
@interface CheckoutFooterView : ListFooterView
- (nonnull instancetype)init;
- (nonnull instancetype)initWithFrame:(CGRect)frame scrollView:(UIScrollView * _Nullable)scrollView OBJC_DESIGNATED_INITIALIZER;
/// Use this property to set the on-tap event for the purchase button.
@property (nonatomic, copy) void (^ _Nullable onPurchaseButtonTap)(void);
@property (nonatomic) BOOL purchaseButtonEnabled;
@property (nonatomic, strong) UILabel * _Nonnull marketLabel;
@property (nonatomic, strong) UILabel * _Nonnull priceLabel;
@end


SWIFT_PROTOCOL("_TtP11SeatGeekSDK25CheckoutViewModelProtocol_")
@protocol CheckoutViewModelProtocol
- (void)addDiscountWithCode:(NSString * _Nonnull)code eventID:(NSString * _Nullable)eventID marketName:(NSString * _Nullable)marketName completion:(void (^ _Nonnull)(SGCodeValidationResponse * _Nonnull))completion;
- (void)fetchSummaryThenDoWithPurchase:(SGCheckoutPurchase * _Nonnull)purchase success:(MGBlock _Nullable)success fail:(SGAPIFailBlock _Nullable)fail;
- (void)submitThenDoWithPurchase:(SGCheckoutPurchase * _Nonnull)purchase success:(MGBlock _Nullable)success fail:(SGAPIFailBlock _Nullable)fail;
- (void)abandonCartWithPurchase:(SGCheckoutPurchase * _Nonnull)purchase;
- (void)selectAddonWithPurchase:(SGCheckoutPurchase * _Nonnull)purchase success:(MGBlock _Null_unspecified)success fail:(SGAPIFailBlock _Null_unspecified)fail;
- (void)addPaymentMethodWithPaymentMethod:(SGPaymentMethodSpreedly * _Nonnull)paymentMethod isSandbox:(BOOL)isSandbox success:(MGBlockWithContext _Null_unspecified)success fail:(SGAPIFailBlock _Null_unspecified)fail;
- (void)deletePaymentMethodWithPaymentMethod:(SGPaymentMethodSpreedly * _Nonnull)paymentMethod fail:(SGAPIFailBlock _Null_unspecified)fail;
- (void)updateAcknowledgementsWithPurchase:(SGCheckoutPurchase * _Nonnull)purchase success:(void (^ _Nullable)(void))success fail:(void (^ _Nullable)(NSArray<SGAPIError *> * _Nullable))fail;
- (void)updateContactWithPurchase:(SGCheckoutPurchase * _Nonnull)purchase success:(void (^ _Nullable)(void))success fail:(void (^ _Nullable)(NSArray<SGAPIError *> * _Nullable))fail;
@end


SWIFT_CLASS_NAMED("CheckoutViewModel")
@interface SGKCheckoutViewModel : NSObject <CheckoutViewModelProtocol>
- (nonnull instancetype)initWithCheckoutAPIService:(id <SGKCheckoutAPIService> _Nonnull)checkoutAPIService OBJC_DESIGNATED_INITIALIZER;
- (void)addDiscountWithCode:(NSString * _Nonnull)code eventID:(NSString * _Nullable)eventID marketName:(NSString * _Nullable)marketName completion:(void (^ _Nonnull)(SGCodeValidationResponse * _Nonnull))completion;
- (void)abandonCartWithPurchase:(SGCheckoutPurchase * _Nonnull)purchase;
- (void)fetchSummaryThenDoWithPurchase:(SGCheckoutPurchase * _Nonnull)purchase success:(MGBlock _Nullable)success fail:(SGAPIFailBlock _Nullable)fail;
- (void)submitThenDoWithPurchase:(SGCheckoutPurchase * _Nonnull)purchase success:(MGBlock _Nullable)success fail:(SGAPIFailBlock _Nullable)fail;
- (void)selectAddonWithPurchase:(SGCheckoutPurchase * _Nonnull)purchase success:(MGBlock _Null_unspecified)success fail:(SGAPIFailBlock _Null_unspecified)fail;
- (void)addPaymentMethodWithPaymentMethod:(SGPaymentMethodSpreedly * _Nonnull)paymentMethod isSandbox:(BOOL)isSandbox success:(MGBlockWithContext _Null_unspecified)success fail:(SGAPIFailBlock _Null_unspecified)fail;
- (void)deletePaymentMethodWithPaymentMethod:(SGPaymentMethodSpreedly * _Nonnull)paymentMethod fail:(SGAPIFailBlock _Null_unspecified)fail;
- (void)updateAcknowledgementsWithPurchase:(SGCheckoutPurchase * _Nonnull)purchase success:(void (^ _Nullable)(void))success fail:(void (^ _Nullable)(NSArray<SGAPIError *> * _Nullable))fail;
- (void)updateContactWithPurchase:(SGCheckoutPurchase * _Nonnull)purchase success:(void (^ _Nullable)(void))success fail:(void (^ _Nullable)(NSArray<SGAPIError *> * _Nullable))fail;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


enum ContactSupportSource : NSInteger;

SWIFT_CLASS_NAMED("ContactSupportManager")
@interface SGContactSupportManager : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull defaultCustomerServiceEmail;)
+ (NSString * _Nonnull)defaultCustomerServiceEmail SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithContactSupportSource:(enum ContactSupportSource)contactSupportSource OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, ContactSupportSource, open) {
  ContactSupportSourceAccountSettings = 0,
  ContactSupportSourceMyTickets = 1,
  ContactSupportSourceCheckout = 2,
  ContactSupportSourceEventTickets = 3,
  ContactSupportSourceSellTickets = 4,
};

@class SGCountrySelectorViewModel;
@class UICollectionView;

SWIFT_CLASS_NAMED("CountrySelectorViewController")
@interface SGCountrySelectorViewController : UIViewController <UICollectionViewDelegate>
- (nonnull instancetype)initWithViewModel:(SGCountrySelectorViewModel * _Nonnull)viewModel selectedValueHandler:(void (^ _Nonnull)(NSString * _Nonnull))selectedValueHandler OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)collectionView:(UICollectionView * _Nonnull)collectionView didDeselectItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (void)collectionView:(UICollectionView * _Nonnull)collectionView didSelectItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end

@class SGPaymentMethodBillingInfoFieldOption;

SWIFT_CLASS_NAMED("CountrySelectorViewModel")
@interface SGCountrySelectorViewModel : NSObject
- (nonnull instancetype)initWithOptions:(NSArray<SGPaymentMethodBillingInfoFieldOption *> * _Nonnull)options initialSelectedValue:(NSString * _Nonnull)initialSelectedValue OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSNumber;

SWIFT_CLASS_NAMED("CreditCardDetails")
@interface SGCreditCardDetails : NSObject <NSCopying>
@property (nonatomic, readonly, copy) NSString * _Nonnull creditCardNumber;
@property (nonatomic, readonly, strong) NSNumber * _Nullable expirationMonth;
@property (nonatomic, readonly, strong) NSNumber * _Nullable expirationYear;
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@protocol SGCreditCardScannerViewControllerDelegate;

SWIFT_CLASS_NAMED("CreditCardScannerViewController")
@interface SGCreditCardScannerViewController : UIViewController
@property (nonatomic, weak) id <SGCreditCardScannerViewControllerDelegate> _Nullable delegate;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewDidAppear:(BOOL)animated;
- (void)viewDidDisappear:(BOOL)animated;
- (void)viewDidLayoutSubviews;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class AVCaptureOutput;
@class AVCaptureConnection;

@interface SGCreditCardScannerViewController (SWIFT_EXTENSION(SeatGeekSDK)) <AVCaptureVideoDataOutputSampleBufferDelegate>
- (void)captureOutput:(AVCaptureOutput * _Nonnull)output didOutputSampleBuffer:(CMSampleBufferRef _Nonnull)sampleBuffer fromConnection:(AVCaptureConnection * _Nonnull)connection;
@end


SWIFT_PROTOCOL_NAMED("CreditCardScannerViewControllerDelegate")
@protocol SGCreditCardScannerViewControllerDelegate
- (void)creditCardScannerViewController:(SGCreditCardScannerViewController * _Nonnull)creditCardScannerViewController didScanCreditCardDetails:(SGCreditCardDetails * _Nonnull)creditCardDetails;
@end







/// An accessory bar that enables easier/faster pagination through large forms, like address entry.
/// Offers a delegate that can provide a custom secondary accessory action (the default is clear)
SWIFT_CLASS_NAMED("FormFieldAccessoryBar")
@interface SGFormFieldAccessoryBar : UIView
/// The secondary accessory button displayed on the righthand side next to the done button.
/// This is set to <code>FormFieldAccessoryBar.clearButton</code> by default.
@property (nonatomic, strong) UIButton * _Nullable accessoryButton;
/// Designated initializer for <code>FormFieldAccessoryBar</code>.
/// \param textFields The set of text fields this bar should manage and paginate between.
///
/// \param initialTextField The initial text field this bar should focus on.
///
- (nonnull instancetype)initWithTextFields:(NSArray<UITextField *> * _Nonnull)textFields initialTextField:(UITextField * _Nonnull)initialTextField OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC11SeatGeekSDK26GeneralMessagingController")
@interface GeneralMessagingController : SGNavigatorChildController
- (void)viewDidLoad;
- (void)viewDidLayoutSubviews;
- (void)viewDidAppear:(BOOL)animated;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class UIImage;
@class SGPromotion;

@interface GeneralMessagingController (SWIFT_EXTENSION(SeatGeekSDK))
/// Creates a controller with details about NFL verified primary inventory.
///
/// returns:
/// A controller with details about NFL verified primary inventory.
+ (GeneralMessagingController * _Nonnull)nflVerifiedPrimaryController SWIFT_WARN_UNUSED_RESULT;
/// Creates a controller with details on the Buyer Guarantee
///
/// returns:
/// A controller with details on the Buyer Guarantee
+ (GeneralMessagingController * _Nonnull)buyerGuaranteeControllerWithShowsCloseButton:(BOOL)showsCloseButton SWIFT_WARN_UNUSED_RESULT;
/// Creates a controller with more callout information.
///
/// returns:
/// A controller with more callout information.
+ (GeneralMessagingController * _Nonnull)calloutControllerWithTitle:(NSString * _Nonnull)title subtitle:(NSString * _Nullable)subtitle image:(UIImage * _Nullable)image promotion:(SGPromotion * _Nullable)promotion learnMore:(BOOL)learnMore SWIFT_WARN_UNUSED_RESULT;
@end



SWIFT_CLASS_NAMED("HelpCenterWebViewController")
@interface SGHelpCenterWebViewController : UIViewController
- (nonnull instancetype)initWithUiOrigin:(SGTrackerUserHelpUIOrigin)uiOrigin contactSupportManager:(SGContactSupportManager * _Nonnull)contactSupportManager;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)loadView;
- (void)viewDidLoad;
- (void)viewDidAppear:(BOOL)animated;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end

@class WKWebView;
@class WKNavigationAction;

@interface SGHelpCenterWebViewController (SWIFT_EXTENSION(SeatGeekSDK)) <WKNavigationDelegate>
- (void)webView:(WKWebView * _Nonnull)webView decidePolicyForNavigationAction:(WKNavigationAction * _Nonnull)navigationAction decisionHandler:(void (^ _Nonnull)(WKNavigationActionPolicy))decisionHandler;
@end

@class NSURL;
@class NSError;

SWIFT_CLASS_NAMED("ImageLoader")
@interface SGImageLoader : NSObject
/// Asynchronously fetches and decodes an image at the specified URL.
/// \param url The URL of the image to be retrieved.
///
/// \param completionHandler A completion handler that passes in either the decoded image or an error parameter.
///
- (void)loadImageAt:(NSURL * _Nonnull)url completionHandler:(void (^ _Nonnull)(UIImage * _Nullable, NSError * _Nullable))completionHandler;
/// Asynchronously fetches an image at the specified URL and decodes it into a downsampled thumbnail image.
/// \param url The URL of the image to be retrieved.
///
/// \param thumbnailMaximumDimension The desired maximum height or width of the decoded thumbnail image (in points).
///
/// \param completionHandler A completion handler that passes in either the decoded thumbnail image or an error parameter.
///
- (void)loadImageAt:(NSURL * _Nonnull)url thumbnailMaximumDimension:(CGFloat)thumbnailMaximumDimension completionHandler:(void (^ _Nonnull)(UIImage * _Nullable, NSError * _Nullable))completionHandler;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// A Label subclass to make Typestyles + Labels ez pz.
/// Usage: Set the typestyle or sgTypestyle on a label, and then you can set text and the label properties as you normally would
/// let label = Label(typestyle: .title)
/// // label.textColor = .sgTextPrimary
/// label.textAlignment = .center
/// label.lineBreakMode = .wordWrapping
/// label.text = “My Text”
SWIFT_CLASS_NAMED("Label")
@interface SGLabel : UILabel
+ (SGLabel * _Nonnull)labelWithTypestyle:(SGTypestyle * _Nonnull)typestyle SWIFT_WARN_UNUSED_RESULT;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)layoutSubviews;
@property (nonatomic, strong) SGTypestyle * _Nullable typestyle;
@property (nonatomic, copy) NSString * _Nullable text;
@property (nonatomic) NSTextAlignment textAlignment;
@property (nonatomic, strong) UIColor * _Null_unspecified textColor;
@property (nonatomic) NSLineBreakMode lineBreakMode;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end




@class UICollectionViewLayout;
@class UICollectionReusableView;
@class UICollectionViewCell;

SWIFT_CLASS_NAMED("MyTicketsController")
@interface SGMyTicketsController : SGViewController <SGNavigationLayoutProtocol, UICollectionViewDataSource, UICollectionViewDelegateFlowLayout>
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewDidAppear:(BOOL)animated;
- (void)updateViewConstraints;
- (void)safeAreaInsetsChanged;
- (void)viewWillTransitionToSize:(CGSize)size withTransitionCoordinator:(id <UIViewControllerTransitionCoordinator> _Nonnull)coordinator;
- (BOOL)usesTallNavBar SWIFT_WARN_UNUSED_RESULT;
- (BOOL)hideNavBarOnShow SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)numberOfSectionsInCollectionView:(UICollectionView * _Nonnull)collectionView SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)collectionView:(UICollectionView * _Nonnull)collectionView numberOfItemsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (CGSize)collectionView:(UICollectionView * _Nonnull)collectionView layout:(UICollectionViewLayout * _Nonnull)collectionViewLayout referenceSizeForHeaderInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UICollectionReusableView * _Nonnull)collectionView:(UICollectionView * _Nonnull)collectionView viewForSupplementaryElementOfKind:(NSString * _Nonnull)kind atIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (UICollectionViewCell * _Nonnull)collectionView:(UICollectionView * _Nonnull)collectionView cellForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (CGSize)collectionView:(UICollectionView * _Nonnull)collectionView layout:(UICollectionViewLayout * _Nonnull)collectionViewLayout sizeForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)collectionView:(UICollectionView * _Nonnull)collectionView willDisplayCell:(UICollectionViewCell * _Nonnull)cell forItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (void)collectionView:(UICollectionView * _Nonnull)collectionView didSelectItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (void)scrollViewDidScroll:(UIScrollView * _Nonnull)scrollView;
- (void)scrollViewWillBeginDragging:(UIScrollView * _Nonnull)scrollView;
- (void)scrollViewDidEndDragging:(UIScrollView * _Nonnull)scrollView willDecelerate:(BOOL)decelerate;
- (void)scrollViewDidEndDecelerating:(UIScrollView * _Nonnull)scrollView;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


@class MFMailComposeViewController;

@interface SGMyTicketsController (SWIFT_EXTENSION(SeatGeekSDK)) <MFMailComposeViewControllerDelegate>
- (void)mailComposeController:(MFMailComposeViewController * _Nonnull)controller didFinishWithResult:(MFMailComposeResult)result error:(NSError * _Nullable)error;
@end



@interface NSAttributedString (SWIFT_EXTENSION(SeatGeekSDK))
- (CGSize)sgk_sizeForWidth:(CGFloat)forWidth SWIFT_WARN_UNUSED_RESULT;
@end






@interface NSString (SWIFT_EXTENSION(SeatGeekSDK))
- (NSAttributedString * _Nonnull)withTypestyle:(SGTypestyle * _Nonnull)style SWIFT_WARN_UNUSED_RESULT;
@end






SWIFT_CLASS_NAMED("NavBarButton")
@interface SGNavBarButton : UIButton
/// Action to perform on tapping the button
@property (nonatomic, copy) MGBlock _Nullable onTap;
/// the distance between the icon / text and the left edge of the screen
@property (nonatomic) CGFloat solidLeftMargin;
/// the distance between the icon / text and the right edge of the screen
@property (nonatomic) CGFloat solidRightMargin;
/// the distance between the background of the button and the left edge of the screen
@property (nonatomic) CGFloat transparentLeftMargin;
/// the distance between the background of the button and the right edge of the screen
@property (nonatomic) CGFloat transparentRightMargin;
/// the distance between the translucent background of the button and the left of the icon
@property (nonatomic) CGFloat transparentLeftInset;
/// the distance between the translucent background of the button and the right edge of the icon
@property (nonatomic) CGFloat transparentRightInset;
/// Set an image to be used on this bar button
@property (nonatomic, strong) UIImage * _Nullable icon;
/// Set a title to be used on this bar button
@property (nonatomic, copy) NSString * _Nullable title;
- (nonnull instancetype)init;
- (nonnull instancetype)initWithHostingController:(UIViewController * _Nullable)hostingController OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)updateContent;
@property (nonatomic, readonly) CGSize intrinsicContentSize;
- (void)updateConstraints;
- (void)didMoveToWindow;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS_NAMED("NavBarBackButton")
@interface SGNavBarBackButton : SGNavBarButton
- (nonnull instancetype)initWithHostingController:(UIViewController * _Nullable)hostingController SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end



@interface SGNavBarButton (SWIFT_EXTENSION(SeatGeekSDK))
/// A back button which automatically handles back behaviour in a UINavigationController
+ (SGNavBarBackButton * _Nonnull)backButtonFor:(UIViewController * _Nullable)hostingController SWIFT_WARN_UNUSED_RESULT;
/// A generic back button with no onTap action
+ (SGNavBarButton * _Nonnull)backButton SWIFT_WARN_UNUSED_RESULT;
+ (SGNavBarButton * _Nonnull)buttonWithTitle:(NSString * _Nonnull)title SWIFT_WARN_UNUSED_RESULT;
+ (SGNavBarButton * _Nonnull)buttonWithImage:(UIImage * _Nullable)image voiceover:(NSString * _Nonnull)voiceover SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS_NAMED("NavBarTrackButton")
@interface SGNavBarTrackButton : SGNavBarButton
- (nonnull instancetype)initWithHostingController:(UIViewController * _Nullable)hostingController SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end




SWIFT_CLASS_NAMED("VerticalListRowView")
@interface SGVerticalListRowView : UIControl
@property (nonatomic) BOOL isEditable;
@property (nonatomic, copy) void (^ _Nullable onDeleteTap)(void);
@property (nonatomic, copy) void (^ _Nullable onTap)(void);
@property (nonatomic, copy) void (^ _Nullable willBeginEditing)(void);
@property (nonatomic, copy) void (^ _Nullable willEndEditing)(void);
@property (nonatomic, strong) UIView * _Nullable contentView;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, readonly) CGSize intrinsicContentSize;
@property (nonatomic, getter=isHighlighted) BOOL highlighted;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end

@protocol SGPaymentMethodProtocol;

SWIFT_CLASS_NAMED("PaymentCardRowView")
@interface SGPaymentCardRowView : SGVerticalListRowView
@property (nonatomic, readonly, strong) id <SGPaymentMethodProtocol> _Nonnull paymentMethod;
@property (nonatomic, getter=isSelected) BOOL selected;
- (nonnull instancetype)initWithPaymentMethod:(id <SGPaymentMethodProtocol> _Nonnull)paymentMethod OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (void)styleSelected:(BOOL)selected;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_PROTOCOL_NAMED("PaymentMethodProtocol")
@protocol SGPaymentMethodProtocol
@property (nonatomic, readonly, copy) NSString * _Nonnull ID;
@property (nonatomic, readonly, strong) UIImage * _Nullable creditCardIcon;
@property (nonatomic, readonly, copy) NSString * _Nullable last4Digits;
@property (nonatomic, readonly, copy) NSString * _Nullable maskedLast4Digits;
@property (nonatomic, readonly, copy) NSString * _Nullable nameAndExpirationDate;
@property (nonatomic, readonly) BOOL isSpreedly;
@property (nonatomic, readonly, copy) NSString * _Nullable cardType;
@end

@class SGTransfer;

SWIFT_CLASS("_TtC11SeatGeekSDK29PaymentMethodSelectController")
@interface PaymentMethodSelectController : SGCheckoutEditScreen
- (nonnull instancetype)initWithCheckoutViewModel:(id <CheckoutViewModelProtocol> _Nonnull)checkoutViewModel allowSelectApplePay:(BOOL)allowSelectApplePay allowSelectAffirmPaymentMethod:(BOOL)allowSelectAffirmPaymentMethod transfer:(SGTransfer * _Nullable)transfer OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewSafeAreaInsetsDidChange;
- (void)viewDidAppear:(BOOL)animated;
- (void)viewDidDisappear:(BOOL)animated;
- (SGNavigatorAnimation)transitionAnimation SWIFT_WARN_UNUSED_RESULT;
- (UIView * _Nonnull)footer SWIFT_WARN_UNUSED_RESULT;
- (void)undoChanges;
- (void)saveChangesThenDo:(MGBlock _Null_unspecified)success fail:(SGAPIFailBlock _Null_unspecified)fail;
- (null_unspecified instancetype)initWithCheckoutViewModel:(id <CheckoutViewModelProtocol> _Null_unspecified)checkoutViewModel SWIFT_UNAVAILABLE;
@end


@interface PaymentMethodSelectController (SWIFT_EXTENSION(SeatGeekSDK))
+ (PaymentMethodSelectController * _Nonnull)controllerWithAllowSelectApplePay:(BOOL)allowSelectApplePay transfer:(SGTransfer * _Nonnull)transfer SWIFT_WARN_UNUSED_RESULT;
@end


typedef SWIFT_ENUM_NAMED(NSInteger, SGKPayoutBankCountry, "PayoutBankCountry", open) {
  SGKPayoutBankCountryUsa = 0,
  SGKPayoutBankCountryCanada = 1,
};


SWIFT_CLASS_NAMED("PayoutBankCountrySelector")
@interface SGKPayoutBankCountrySelector : SGNavigatorChildController
- (nonnull instancetype)initWithSelectedBankCountry:(enum SGKPayoutBankCountry)selectedBankCountry onBankCountrySelected:(void (^ _Nullable)(enum SGKPayoutBankCountry))onBankCountrySelected OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS_NAMED("PayoutBusinessAddress")
@interface SGKPayoutBusinessAddress : NSObject
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, copy) NSString * _Nullable address1;
@property (nonatomic, copy) NSString * _Nullable address2;
@property (nonatomic, copy) NSString * _Nullable locality;
@property (nonatomic, copy) NSString * _Nullable region;
@property (nonatomic, copy) NSString * _Nullable postalCode;
@property (nonatomic, copy) NSString * _Nullable country;
@property (nonatomic, copy) NSString * _Nullable taxId;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (NSDictionary<NSString *, id> * _Nonnull)payload SWIFT_WARN_UNUSED_RESULT;
@end

@class SGPublicListing;
@class SGPayoutMethod;

SWIFT_CLASS_NAMED("PayoutBusinessAddressController")
@interface SGKPayoutBusinessAddressController : SGNavigatorChildController <UITextFieldDelegate>
/// Designated initializer for <code>PayoutBusinessAddressController</code>.
/// \param listing The listing object that this address will belong to. This is passed to subsequent screens if needed.
///
/// \param payoutMethod The payout method to read an existing address from (for editing), if any. If nil is passed, a new address will be created.
///
/// \param onSubmit Custom closure to execute on successful save of information, if any
///
/// \param saveOnEdit If the payout address should save on editing
///
- (nonnull instancetype)initWithListing:(SGPublicListing * _Nullable)listing payoutMethod:(SGPayoutMethod * _Nullable)payoutMethod saveOnEdit:(BOOL)saveOnEdit onSubmit:(void (^ _Nullable)(void))onSubmit OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewWillDisappear:(BOOL)animated;
- (void)viewDidAppear:(BOOL)animated;
- (void)viewDidLayoutSubviews;
- (BOOL)textFieldShouldReturn:(UITextField * _Nonnull)textField SWIFT_WARN_UNUSED_RESULT;
- (BOOL)textFieldShouldBeginEditing:(UITextField * _Nonnull)textField SWIFT_WARN_UNUSED_RESULT;
- (BOOL)textField:(UITextField * _Nonnull)textField shouldChangeCharactersInRange:(NSRange)range replacementString:(NSString * _Nonnull)string SWIFT_WARN_UNUSED_RESULT;
- (void)textFieldDidBeginEditing:(UITextField * _Nonnull)textField;
- (void)textFieldDidEndEditing:(UITextField * _Nonnull)textField;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end


@interface SGKPayoutBusinessAddressController (SWIFT_EXTENSION(SeatGeekSDK)) <SGKCheckoutAddressControllerDelegate>
- (void)checkoutAddressController:(SGKCheckoutAddressController * _Nonnull)checkoutAddressController didUpdateAddressFromAutoSuggest:(NSString * _Nullable)text;
- (void)checkoutAddressController:(SGKCheckoutAddressController * _Nonnull)checkoutAddressController didUpdateCityFromAutoSuggest:(NSString * _Nullable)text;
- (void)checkoutAddressController:(SGKCheckoutAddressController * _Nonnull)checkoutAddressController didUpdateStateFromAutoSuggest:(NSString * _Nullable)text;
- (void)checkoutAddressController:(SGKCheckoutAddressController * _Nonnull)checkoutAddressController didUpdateZipCodeFromAutoSuggest:(NSString * _Nullable)text;
@end


SWIFT_CLASS_NAMED("PayoutMethodSelectionController")
@interface SGPayoutMethodSelectionController : SGNavigatorChildController
- (nonnull instancetype)initWithListing:(SGPublicListing * _Nullable)listing payoutMethod:(SGPayoutMethod * _Nullable)payoutMethod availablePayoutMethods:(NSArray<SGPayoutMethod *> * _Nullable)availablePayoutMethods OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewDidAppear:(BOOL)animated;
- (void)viewDidLayoutSubviews;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS_NAMED("PayoutPersonalAddressController")
@interface SGKPayoutPersonalAddressController : SGNavigatorChildController <UITextFieldDelegate>
/// Designated initializer for <code>PayoutPersonalAddressController</code>.
/// \param listing The listing object that this address will belong to. This is passed to subsequent screens if needed.
///
/// \param payoutMethod The payout method to read an existing address from (for editing), if any. If nil is passed, a new address will be created.
///
/// \param onSubmit Custom closure to execute on successful save of information, if any
///
/// \param saveOnEdit If the payout address should save on editing
///
- (nonnull instancetype)initWithListing:(SGPublicListing * _Nullable)listing payoutMethod:(SGPayoutMethod * _Nullable)payoutMethod saveOnEdit:(BOOL)saveOnEdit onSubmit:(void (^ _Nullable)(void))onSubmit OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewWillDisappear:(BOOL)animated;
- (void)viewDidAppear:(BOOL)animated;
- (void)viewWillLayoutSubviews;
- (BOOL)textFieldShouldReturn:(UITextField * _Nonnull)textField SWIFT_WARN_UNUSED_RESULT;
- (BOOL)textFieldShouldBeginEditing:(UITextField * _Nonnull)textField SWIFT_WARN_UNUSED_RESULT;
- (BOOL)textField:(UITextField * _Nonnull)textField shouldChangeCharactersInRange:(NSRange)range replacementString:(NSString * _Nonnull)string SWIFT_WARN_UNUSED_RESULT;
- (void)textFieldDidBeginEditing:(UITextField * _Nonnull)textField;
- (void)textFieldDidEndEditing:(UITextField * _Nonnull)textField;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end


@interface SGKPayoutPersonalAddressController (SWIFT_EXTENSION(SeatGeekSDK)) <SGKCheckoutAddressControllerDelegate>
- (void)checkoutAddressController:(SGKCheckoutAddressController * _Nonnull)checkoutAddressController didUpdateAddressFromAutoSuggest:(NSString * _Nullable)text;
- (void)checkoutAddressController:(SGKCheckoutAddressController * _Nonnull)checkoutAddressController didUpdateCityFromAutoSuggest:(NSString * _Nullable)text;
- (void)checkoutAddressController:(SGKCheckoutAddressController * _Nonnull)checkoutAddressController didUpdateStateFromAutoSuggest:(NSString * _Nullable)text;
- (void)checkoutAddressController:(SGKCheckoutAddressController * _Nonnull)checkoutAddressController didUpdateZipCodeFromAutoSuggest:(NSString * _Nullable)text;
@end


SWIFT_CLASS_NAMED("PayoutPersonalBusinessAddressController")
@interface SGKPayoutPersonalBusinessAddressController : SGNavigatorChildController <UITextFieldDelegate>
/// Designated initializer for <code>PayoutPersonalBusinessAddressController</code>.
/// \param listing The listing object that this address will belong to. This is passed to subsequent screens if needed.
///
/// \param payoutMethod The payout method to read an existing address from (for editing), if any. If nil is passed, a new address will be created.
///
/// \param onSubmit Custom closure to execute on successful save of information, if any
///
/// \param saveOnEdit If the payout address should save on editing
///
- (nonnull instancetype)initWithListing:(SGPublicListing * _Nullable)listing payoutMethod:(SGPayoutMethod * _Nullable)payoutMethod saveOnEdit:(BOOL)saveOnEdit onSubmit:(void (^ _Nullable)(void))onSubmit OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewWillDisappear:(BOOL)animated;
- (void)viewDidLayoutSubviews;
- (BOOL)textFieldShouldReturn:(UITextField * _Nonnull)textField SWIFT_WARN_UNUSED_RESULT;
- (BOOL)textFieldShouldBeginEditing:(UITextField * _Nonnull)textField SWIFT_WARN_UNUSED_RESULT;
- (BOOL)textField:(UITextField * _Nonnull)textField shouldChangeCharactersInRange:(NSRange)range replacementString:(NSString * _Nonnull)string SWIFT_WARN_UNUSED_RESULT;
- (void)textFieldDidBeginEditing:(UITextField * _Nonnull)textField;
- (void)textFieldDidEndEditing:(UITextField * _Nonnull)textField;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end


@interface SGKPayoutPersonalBusinessAddressController (SWIFT_EXTENSION(SeatGeekSDK)) <SGKCheckoutAddressControllerDelegate>
- (void)checkoutAddressController:(SGKCheckoutAddressController * _Nonnull)checkoutAddressController didUpdateAddressFromAutoSuggest:(NSString * _Nullable)text;
- (void)checkoutAddressController:(SGKCheckoutAddressController * _Nonnull)checkoutAddressController didUpdateCityFromAutoSuggest:(NSString * _Nullable)text;
- (void)checkoutAddressController:(SGKCheckoutAddressController * _Nonnull)checkoutAddressController didUpdateStateFromAutoSuggest:(NSString * _Nullable)text;
- (void)checkoutAddressController:(SGKCheckoutAddressController * _Nonnull)checkoutAddressController didUpdateZipCodeFromAutoSuggest:(NSString * _Nullable)text;
@end


SWIFT_CLASS_NAMED("PayoutSellerTypeViewController")
@interface SGPayoutSellerTypeViewController : SGNavigatorChildController <UICollectionViewDelegate>
@property (nonatomic) CGFloat contentHeight;
- (nonnull instancetype)initWithPayoutMethod:(SGPayoutMethod * _Nonnull)payoutMethod listing:(SGPublicListing * _Nullable)listing OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
- (void)viewDidLoad;
- (void)collectionView:(UICollectionView * _Nonnull)collectionView didSelectItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
@end


SWIFT_CLASS_NAMED("PayoutUserInfoController")
@interface SGKPayoutUserInfoController : SGNavigatorChildController <UITextFieldDelegate>
/// Designated initializer for <code>PayoutUserInfoController</code>.
/// \param listing The listing object that this address will belong to. This is passed to subsequent screens if needed.
///
/// \param payoutMethod The payout method to read an existing address from (for editing), if any. If nil is passed, a new address will be created.
///
/// \param onSubmit Custom closure to execute on successful save of information, if any
///
/// \param saveOnEdit If the payout address should save on editing
///
- (nonnull instancetype)initWithListing:(SGPublicListing * _Nullable)listing payoutMethod:(SGPayoutMethod * _Nullable)payoutMethod saveOnEdit:(BOOL)saveOnEdit onSubmit:(void (^ _Nullable)(void))onSubmit OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
- (void)viewDidLoad;
- (void)viewWillDisappear:(BOOL)animated;
- (void)viewDidAppear:(BOOL)animated;
- (void)viewDidLayoutSubviews;
- (BOOL)textFieldShouldReturn:(UITextField * _Nonnull)textField SWIFT_WARN_UNUSED_RESULT;
- (BOOL)textField:(UITextField * _Nonnull)textField shouldChangeCharactersInRange:(NSRange)range replacementString:(NSString * _Nonnull)string SWIFT_WARN_UNUSED_RESULT;
- (void)textFieldDidBeginEditing:(UITextField * _Nonnull)textField;
- (void)textFieldDidEndEditing:(UITextField * _Nonnull)textField;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS_NAMED("PriceFormattingTextFieldDelegate")
@interface SGPriceFormattingTextFieldDelegate : NSObject <UITextFieldDelegate>
@property (nonatomic) float price;
@property (nonatomic, copy) NSString * _Nonnull isoCurrencyCode;
@property (nonatomic, strong) NSAttributedString * _Nullable attributedAccessoryText;
- (nonnull instancetype)initWithTextField:(UITextField * _Nonnull)textField priceChangeHandler:(BOOL (^ _Nonnull)(SGPriceFormattingTextFieldDelegate * _Nonnull, float))priceChangeHandler OBJC_DESIGNATED_INITIALIZER;
- (void)textFieldDidBeginEditing:(UITextField * _Nonnull)textField;
- (BOOL)textField:(UITextField * _Nonnull)textField shouldChangeCharactersInRange:(NSRange)range replacementString:(NSString * _Nonnull)string SWIFT_WARN_UNUSED_RESULT;
- (void)textFieldDidEndEditing:(UITextField * _Nonnull)textField reason:(UITextFieldDidEndEditingReason)reason;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@protocol SGPublicSaleMarketCodeViewable;

SWIFT_CLASS_NAMED("PublicSaleMarketCodeView")
@interface SGPublicSaleMarketCodeView : UIView
@property (nonatomic, weak) UIViewController * _Nullable viewControllerToLaunchPasteboardFrom;
- (nonnull instancetype)initWithSeatInformation:(id <SGPublicSaleMarketCodeViewable> _Nonnull)seatInformation OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithSeatTitle:(NSString * _Nullable)seatTitle seatToken:(NSString * _Nullable)seatToken OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


SWIFT_PROTOCOL_NAMED("PublicSaleMarketCodeViewable")
@protocol SGPublicSaleMarketCodeViewable
@property (nonatomic, readonly, copy) NSString * _Nullable seatTitle;
@property (nonatomic, readonly, copy) NSString * _Nullable seatToken;
@end

@class SGBottomModalNavigator;

SWIFT_CLASS_NAMED("PublicSaleSuccessController")
@interface SGPublicSaleSuccessController : UIViewController
@property (nonatomic, weak) SGBottomModalNavigator * _Nullable bottomModalNavigator;
- (nonnull instancetype)initWithListing:(SGPublicListing * _Nonnull)listing;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
- (void)viewDidLoad;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end


typedef SWIFT_ENUM_NAMED(NSInteger, SGMyTicketsRefreshPriority, "RefreshPriority", open) {
  SGMyTicketsRefreshPriorityRequired = 0,
  SGMyTicketsRefreshPriorityNormal = 1,
};


SWIFT_CLASS_NAMED("ReturnPolicy")
@interface SGKReturnPolicy : NSObject
- (NSDictionary<NSString *, id> * _Nullable)payload SWIFT_WARN_UNUSED_RESULT;
+ (SGKReturnPolicy * _Nullable)returnPolicyFromDictionary:(NSDictionary<NSString *, id> * _Nonnull)dictionary SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("ReturnPolicyEligible")
@interface SGKReturnPolicyEligible : NSObject
- (NSDictionary<NSString *, id> * _Nonnull)payload SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS_NAMED("ReturnPolicyIneligible")
@interface SGKReturnPolicyIneligible : NSObject
- (NSDictionary<NSString *, id> * _Nonnull)payload SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS_NAMED("SDKTracker")
@interface SGSDKTracker : NSObject
- (nonnull instancetype)initWithClientID:(NSString * _Nonnull)clientID OBJC_DESIGNATED_INITIALIZER;
- (void)logMParticleEvent:(NSString * _Nonnull)eventName withEventMetadata:(NSDictionary<NSString *, id> * _Nullable)eventMetadata;
- (void)setMParticleUserAttributeForKey:(NSString * _Nonnull)key value:(id _Nonnull)value;
- (void)removeMParticleUserAttributeForKey:(NSString * _Nonnull)key;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end




SWIFT_CLASS("_TtC11SeatGeekSDK17SGAcknowledgement")
@interface SGAcknowledgement : NSObject
@property (nonatomic, copy) NSString * _Nonnull id;
@property (nonatomic) BOOL value;
@property (nonatomic, copy) NSString * _Nonnull markdownText;
@property (nonatomic, copy) NSString * _Nonnull category;
@property (nonatomic) BOOL required;
@property (nonatomic, copy) NSString * _Nonnull slug;
+ (SGAcknowledgement * _Nullable)acknowledgementFromDictionary:(NSDictionary<NSString *, id> * _Nonnull)dictionary SWIFT_WARN_UNUSED_RESULT;
- (NSDictionary<NSString *, id> * _Nonnull)payloadUsingNewCheckoutAPI:(BOOL)usingNewCheckoutAPI SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface SGAcknowledgement (SWIFT_EXTENSION(SeatGeekSDK))
+ (SGAcknowledgement * _Nullable)firstAcknowledgementThatNeedsToBeAgreedIn:(NSArray<SGAcknowledgement *> * _Nullable)acknowledgements SWIFT_WARN_UNUSED_RESULT;
@end



@interface SGAcknowledgement (SWIFT_EXTENSION(SeatGeekSDK))
+ (NSArray<SGAcknowledgement *> * _Nonnull)implicitAcknowlegdementsIn:(NSArray<SGAcknowledgement *> * _Nonnull)acknowledgements SWIFT_WARN_UNUSED_RESULT;
+ (NSArray<SGAcknowledgement *> * _Nonnull)explicitAcknowlegdementsIn:(NSArray<SGAcknowledgement *> * _Nonnull)acknowledgements SWIFT_WARN_UNUSED_RESULT;
@end


@interface SGAlertView (SWIFT_EXTENSION(SeatGeekSDK))
/// Creates an alert view to present when the user does not have an active email account.
/// \param recipientEmail Optional recipient email address. Will be presented in the
/// message if supplied.
///
///
/// returns:
/// An alert view to present.
+ (SGAlertView * _Nonnull)noEmailAccountWithRecipientEmail:(NSString * _Nullable)recipientEmail SWIFT_WARN_UNUSED_RESULT;
@end


@interface SGListing (SWIFT_EXTENSION(SeatGeekSDK))
@property (nonatomic, readonly, copy) NSString * _Nonnull localizedDisplayPriceText;
@property (nonatomic, readonly, copy) NSString * _Nonnull localizedDisplayFeesText;
@property (nonatomic, readonly, copy) NSString * _Nonnull localizedServerDisplayPriceText;
@property (nonatomic, readonly, copy) NSString * _Nonnull localizedSeatGeekDisplayPriceText;
@end


/// SGMyTickets is a wrapper around MyTickets to expose it to Objective-C
SWIFT_CLASS("_TtC11SeatGeekSDK11SGMyTickets")
@interface SGMyTickets : NSObject
/// If priority is required, refresh happens immediately.  If non required, requests accumulate and a single refresh occurs after a short delay
+ (void)refreshWith:(enum SGMyTicketsRefreshPriority)priority;
/// If priority is required, refresh happens immediately.  If non required, requests accumulate and a single refresh occurs after a short delay
+ (void)refreshWith:(enum SGMyTicketsRefreshPriority)priority onCompletion:(void (^ _Nonnull)(BOOL))onCompletion;
+ (void)clear;
+ (void)onDidLoadWithOwner:(id _Nonnull)owner :(void (^ _Nonnull)(void))do_;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger numberOfIncomingTranfers;)
+ (NSInteger)numberOfIncomingTranfers SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) BOOL hasTakeoverEvent;)
+ (BOOL)hasTakeoverEvent SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSParagraphStyle;
@class UIFont;

/// SGTypestyle is a wrapper around Typestyle to expose it to Objective-C
SWIFT_CLASS_NAMED("SGObjcTypestyle")
@interface SGTypestyle : NSObject
/// Objective-C doesn’t support nil value types, so let’s use NSNumber
@property (nonatomic, readonly, strong) NSNumber * _Nullable lineHeight;
@property (nonatomic, readonly, strong) NSParagraphStyle * _Nonnull paragraphStyle;
@property (nonatomic, readonly, strong) UIFont * _Nonnull font;
@property (nonatomic, readonly, strong) UIColor * _Nonnull textColor;
@property (nonatomic, readonly, strong) NSDictionary * _Nonnull textAttributes;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface SGTypestyle (SWIFT_EXTENSION(SeatGeekSDK))
- (SGTypestyle * _Nonnull (^ _Nonnull)(UIColor * _Nonnull))withColor SWIFT_WARN_UNUSED_RESULT;
- (SGTypestyle * _Nonnull)withColor:(UIColor * _Nonnull)color SWIFT_WARN_UNUSED_RESULT;
- (SGTypestyle * _Nonnull (^ _Nonnull)(NSTextAlignment))withTextAlignment SWIFT_WARN_UNUSED_RESULT;
- (SGTypestyle * _Nonnull)withTextAlignment:(NSTextAlignment)alignment SWIFT_WARN_UNUSED_RESULT;
- (SGTypestyle * _Nonnull (^ _Nonnull)(NSLineBreakMode))withLineBreakMode SWIFT_WARN_UNUSED_RESULT;
- (SGTypestyle * _Nonnull)withLineBreakMode:(NSLineBreakMode)lineBreakMode SWIFT_WARN_UNUSED_RESULT;
@end


@interface SGTypestyle (SWIFT_EXTENSION(SeatGeekSDK))
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SGTypestyle * _Nonnull graphLabel;)
+ (SGTypestyle * _Nonnull)graphLabel SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SGTypestyle * _Nonnull dealScore;)
+ (SGTypestyle * _Nonnull)dealScore SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SGTypestyle * _Nonnull priceDrop;)
+ (SGTypestyle * _Nonnull)priceDrop SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SGTypestyle * _Nonnull trendingRank;)
+ (SGTypestyle * _Nonnull)trendingRank SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SGTypestyle * _Nonnull trendingNewLabel;)
+ (SGTypestyle * _Nonnull)trendingNewLabel SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SGTypestyle * _Nonnull text4InterfaceThin;)
+ (SGTypestyle * _Nonnull)text4InterfaceThin SWIFT_WARN_UNUSED_RESULT;
@end


@interface SGTypestyle (SWIFT_EXTENSION(SeatGeekSDK))
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SGTypestyle * _Nonnull heading1;)
+ (SGTypestyle * _Nonnull)heading1 SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SGTypestyle * _Nonnull heading2;)
+ (SGTypestyle * _Nonnull)heading2 SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SGTypestyle * _Nonnull heading3;)
+ (SGTypestyle * _Nonnull)heading3 SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SGTypestyle * _Nonnull heading4;)
+ (SGTypestyle * _Nonnull)heading4 SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SGTypestyle * _Nonnull subtitle;)
+ (SGTypestyle * _Nonnull)subtitle SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SGTypestyle * _Nonnull terms;)
+ (SGTypestyle * _Nonnull)terms SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SGTypestyle * _Nonnull text1Default;)
+ (SGTypestyle * _Nonnull)text1Default SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SGTypestyle * _Nonnull text1Strong;)
+ (SGTypestyle * _Nonnull)text1Strong SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SGTypestyle * _Nonnull text2Default;)
+ (SGTypestyle * _Nonnull)text2Default SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SGTypestyle * _Nonnull text2Strong;)
+ (SGTypestyle * _Nonnull)text2Strong SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SGTypestyle * _Nonnull text3Default;)
+ (SGTypestyle * _Nonnull)text3Default SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SGTypestyle * _Nonnull text3Strong;)
+ (SGTypestyle * _Nonnull)text3Strong SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SGTypestyle * _Nonnull text4Default;)
+ (SGTypestyle * _Nonnull)text4Default SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SGTypestyle * _Nonnull text4Strong;)
+ (SGTypestyle * _Nonnull)text4Strong SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SGTypestyle * _Nonnull uppercase;)
+ (SGTypestyle * _Nonnull)uppercase SWIFT_WARN_UNUSED_RESULT;
@end








/// A UITextField subclass with overrides specific to SeatGeek
SWIFT_CLASS_NAMED("SearchField")
@interface SGSearchField : UITextField
- (CGRect)clearButtonRectForBounds:(CGRect)bounds SWIFT_WARN_UNUSED_RESULT;
- (CGRect)placeholderRectForBounds:(CGRect)bounds SWIFT_WARN_UNUSED_RESULT;
- (CGRect)borderRectForBounds:(CGRect)bounds SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) CGSize intrinsicContentSize;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("SelectableListRowView")
@interface SGSelectableListRowView : SGVerticalListRowView
@property (nonatomic, copy) NSString * _Nullable title;
@property (nonatomic, copy) NSString * _Nullable subtitle;
@property (nonatomic, copy) NSString * _Nullable decoratorText;
@property (nonatomic, copy) NSString * _Nullable descriptionText;
@property (nonatomic, getter=isSelected) BOOL selected;
@property (nonatomic, copy) NSString * _Nullable leftImageName;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS_NAMED("StatelessCheckoutAPIService")
@interface SGKStatelessCheckoutAPIService : NSObject <SGKCheckoutAPIService>
- (void)addDiscountWithCode:(NSString * _Nonnull)code eventID:(NSString * _Nullable)eventID marketName:(NSString * _Nullable)marketName completion:(void (^ _Nonnull)(SGCodeValidationResponse * _Nonnull))completion;
- (void)abandonCartWithPurchase:(SGCheckoutPurchase * _Nonnull)purchase;
- (void)fetchSummaryThenDoWithPurchase:(SGCheckoutPurchase * _Nonnull)purchase success:(MGBlock _Nullable)success fail:(SGAPIFailBlock _Nullable)fail;
- (void)submitThenDoWithPurchase:(SGCheckoutPurchase * _Nonnull)purchase success:(MGBlock _Nullable)success fail:(SGAPIFailBlock _Nullable)fail;
- (void)selectAddonWithPurchase:(SGCheckoutPurchase * _Nonnull)purchase success:(MGBlock _Null_unspecified)success fail:(SGAPIFailBlock _Null_unspecified)fail;
- (void)addPaymentMethodWithPaymentMethod:(SGPaymentMethodSpreedly * _Nonnull)paymentMethod isSandbox:(BOOL)isSandbox success:(MGBlockWithContext _Null_unspecified)success fail:(SGAPIFailBlock _Null_unspecified)fail;
- (void)deletePaymentMethodWithPaymentMethod:(SGPaymentMethodSpreedly * _Nonnull)paymentMethod fail:(SGAPIFailBlock _Null_unspecified)fail;
- (void)updateAcknowledgementsWithPurchase:(SGCheckoutPurchase * _Nonnull)purchase success:(void (^ _Nullable)(void))success fail:(void (^ _Nullable)(NSArray<SGAPIError *> * _Nullable))fail;
- (void)updateContactWithPurchase:(SGCheckoutPurchase * _Nonnull)purchase success:(void (^ _Nullable)(void))success fail:(void (^ _Nullable)(NSArray<SGAPIError *> * _Nullable))fail;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class UINavigationController;

SWIFT_CLASS("_TtC11SeatGeekSDK26StripeVerifyViewController")
@interface StripeVerifyViewController : UIViewController <UINavigationControllerDelegate>
@property (nonatomic, strong) SGPayoutMethod * _Nullable payoutMethod;
@property (nonatomic, copy) void (^ _Nullable confirmationBlock)(StripeVerifyViewController * _Nonnull);
- (void)navigationController:(UINavigationController * _Nonnull)navigationController willShowViewController:(UIViewController * _Nonnull)viewController animated:(BOOL)animated;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


@class UIWindow;

@interface UIApplication (SWIFT_EXTENSION(SeatGeekSDK))
@property (nonatomic, readonly, strong) UIWindow * _Nullable firstKeyWindow;
@end











@interface UIColor (SWIFT_EXTENSION(SeatGeekSDK))
- (nonnull instancetype)initWithHex:(uint32_t)hex;
- (nonnull instancetype)initWithHex:(uint32_t)hex alpha:(CGFloat)alpha;
- (nullable instancetype)initWithHexString:(NSString * _Nullable)hexString;
- (UIColor * _Nonnull)interpolateTo:(UIColor * _Nonnull)color t:(CGFloat)t SWIFT_WARN_UNUSED_RESULT;
- (UIColor * _Nonnull)withOverlay:(UIColor * _Nonnull)overlay alpha:(CGFloat)alpha SWIFT_WARN_UNUSED_RESULT;
+ (UIColor * _Nonnull)listingColorForBucket:(enum SGListingColor)listingColor SWIFT_WARN_UNUSED_RESULT;
@end



@interface UIColor (SWIFT_EXTENSION(SeatGeekSDK))
/// 0x181818FF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgIconPrimary;)
+ (UIColor * _Nonnull)sgIconPrimary SWIFT_WARN_UNUSED_RESULT;
/// 0x181818EB
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgIconPrimaryHover;)
+ (UIColor * _Nonnull)sgIconPrimaryHover SWIFT_WARN_UNUSED_RESULT;
/// 0xFFFFFFFF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgIconPrimaryAlt;)
+ (UIColor * _Nonnull)sgIconPrimaryAlt SWIFT_WARN_UNUSED_RESULT;
/// 0xFFFFFFEB
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgIconPrimaryAltHover;)
+ (UIColor * _Nonnull)sgIconPrimaryAltHover SWIFT_WARN_UNUSED_RESULT;
/// 0x525252FF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgIconSecondary;)
+ (UIColor * _Nonnull)sgIconSecondary SWIFT_WARN_UNUSED_RESULT;
/// 0x767575FF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgIconTertiary;)
+ (UIColor * _Nonnull)sgIconTertiary SWIFT_WARN_UNUSED_RESULT;
/// 0xDD3C3CFF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgIconCritical;)
+ (UIColor * _Nonnull)sgIconCritical SWIFT_WARN_UNUSED_RESULT;
/// 0x11A669FF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgIconSuccess;)
+ (UIColor * _Nonnull)sgIconSuccess SWIFT_WARN_UNUSED_RESULT;
/// 0xF26A8FF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgIconWarning;)
+ (UIColor * _Nonnull)sgIconWarning SWIFT_WARN_UNUSED_RESULT;
/// 0xFF5B49FF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgIconSpecial;)
+ (UIColor * _Nonnull)sgIconSpecial SWIFT_WARN_UNUSED_RESULT;
/// 0xFF5B49EB
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgIconSpecialHover;)
+ (UIColor * _Nonnull)sgIconSpecialHover SWIFT_WARN_UNUSED_RESULT;
/// 0x76757599
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgIconDisabled;)
+ (UIColor * _Nonnull)sgIconDisabled SWIFT_WARN_UNUSED_RESULT;
/// 0xDEDDDBFF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgBorderPrimary;)
+ (UIColor * _Nonnull)sgBorderPrimary SWIFT_WARN_UNUSED_RESULT;
/// 0x000FF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgBorderPrimaryHover;)
+ (UIColor * _Nonnull)sgBorderPrimaryHover SWIFT_WARN_UNUSED_RESULT;
/// 0x000FF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgBorderPrimaryPressed;)
+ (UIColor * _Nonnull)sgBorderPrimaryPressed SWIFT_WARN_UNUSED_RESULT;
/// 0x000FF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgBorderPrimarySelected;)
+ (UIColor * _Nonnull)sgBorderPrimarySelected SWIFT_WARN_UNUSED_RESULT;
/// 0xFFFFFFFF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgBorderPrimaryAlt;)
+ (UIColor * _Nonnull)sgBorderPrimaryAlt SWIFT_WARN_UNUSED_RESULT;
/// 0xBA2626FF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgBorderCritical;)
+ (UIColor * _Nonnull)sgBorderCritical SWIFT_WARN_UNUSED_RESULT;
/// 0x0007A
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgBorderAccessible;)
+ (UIColor * _Nonnull)sgBorderAccessible SWIFT_WARN_UNUSED_RESULT;
/// 0xDEDDDBFF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgBorderDisabled;)
+ (UIColor * _Nonnull)sgBorderDisabled SWIFT_WARN_UNUSED_RESULT;
/// 0x181818FF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgTextPrimary;)
+ (UIColor * _Nonnull)sgTextPrimary SWIFT_WARN_UNUSED_RESULT;
/// 0xFFFFFFFF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgTextPrimaryAlt;)
+ (UIColor * _Nonnull)sgTextPrimaryAlt SWIFT_WARN_UNUSED_RESULT;
/// 0x525252FF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgTextSecondary;)
+ (UIColor * _Nonnull)sgTextSecondary SWIFT_WARN_UNUSED_RESULT;
/// 0x767575FF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgTextTertiary;)
+ (UIColor * _Nonnull)sgTextTertiary SWIFT_WARN_UNUSED_RESULT;
/// 0xBA2626FF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgTextCritical;)
+ (UIColor * _Nonnull)sgTextCritical SWIFT_WARN_UNUSED_RESULT;
/// 0xB84D0FF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgTextWarning;)
+ (UIColor * _Nonnull)sgTextWarning SWIFT_WARN_UNUSED_RESULT;
/// 0xB6F46FF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgTextSuccess;)
+ (UIColor * _Nonnull)sgTextSuccess SWIFT_WARN_UNUSED_RESULT;
/// 0xDB160FF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgTextSpecial;)
+ (UIColor * _Nonnull)sgTextSpecial SWIFT_WARN_UNUSED_RESULT;
/// 0xB6F46FF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgTextMoney;)
+ (UIColor * _Nonnull)sgTextMoney SWIFT_WARN_UNUSED_RESULT;
/// 0x181818FF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgTextLink;)
+ (UIColor * _Nonnull)sgTextLink SWIFT_WARN_UNUSED_RESULT;
/// 0x181818FF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgTextLinkHover;)
+ (UIColor * _Nonnull)sgTextLinkHover SWIFT_WARN_UNUSED_RESULT;
/// 0x181818FF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgTextLinkSelected;)
+ (UIColor * _Nonnull)sgTextLinkSelected SWIFT_WARN_UNUSED_RESULT;
/// 0x76757599
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgTextDisabled;)
+ (UIColor * _Nonnull)sgTextDisabled SWIFT_WARN_UNUSED_RESULT;
/// 0x1877F2FF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgSocialFacebook;)
+ (UIColor * _Nonnull)sgSocialFacebook SWIFT_WARN_UNUSED_RESULT;
/// 0xFF0BFFF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgSocialLyft;)
+ (UIColor * _Nonnull)sgSocialLyft SWIFT_WARN_UNUSED_RESULT;
/// 0xFFFC0FF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgSocialSnapchat;)
+ (UIColor * _Nonnull)sgSocialSnapchat SWIFT_WARN_UNUSED_RESULT;
/// 0x1DB954FF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgSocialSpotify;)
+ (UIColor * _Nonnull)sgSocialSpotify SWIFT_WARN_UNUSED_RESULT;
/// 0x1ED760FF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgSocialSpotifyLogo;)
+ (UIColor * _Nonnull)sgSocialSpotifyLogo SWIFT_WARN_UNUSED_RESULT;
/// 0x1DA1F2FF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgSocialTwitter;)
+ (UIColor * _Nonnull)sgSocialTwitter SWIFT_WARN_UNUSED_RESULT;
/// 0x21632FF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgMapAmazing;)
+ (UIColor * _Nonnull)sgMapAmazing SWIFT_WARN_UNUSED_RESULT;
/// 0x5381EFF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgMapGreat;)
+ (UIColor * _Nonnull)sgMapGreat SWIFT_WARN_UNUSED_RESULT;
/// 0x719F25FF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgMapGood;)
+ (UIColor * _Nonnull)sgMapGood SWIFT_WARN_UNUSED_RESULT;
/// 0xEAA50FF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgMapOkay;)
+ (UIColor * _Nonnull)sgMapOkay SWIFT_WARN_UNUSED_RESULT;
/// 0xF2697FF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgMapModerate;)
+ (UIColor * _Nonnull)sgMapModerate SWIFT_WARN_UNUSED_RESULT;
/// 0xDD3C3CFF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgMapDeluxe;)
+ (UIColor * _Nonnull)sgMapDeluxe SWIFT_WARN_UNUSED_RESULT;
/// 0xBA2626FF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgMapPremium;)
+ (UIColor * _Nonnull)sgMapPremium SWIFT_WARN_UNUSED_RESULT;
/// 0x587A8DFF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgMapNoDealScore;)
+ (UIColor * _Nonnull)sgMapNoDealScore SWIFT_WARN_UNUSED_RESULT;
/// 0x640CFFF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgMapPackage;)
+ (UIColor * _Nonnull)sgMapPackage SWIFT_WARN_UNUSED_RESULT;
/// 0x32067FF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgMapPackageHighlighted;)
+ (UIColor * _Nonnull)sgMapPackageHighlighted SWIFT_WARN_UNUSED_RESULT;
/// 0x1C71EFFF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgMapPrime;)
+ (UIColor * _Nonnull)sgMapPrime SWIFT_WARN_UNUSED_RESULT;
/// 0x056D6FF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgMapPrimeHighlighted;)
+ (UIColor * _Nonnull)sgMapPrimeHighlighted SWIFT_WARN_UNUSED_RESULT;
/// 0x1AA88BFF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgMapBest;)
+ (UIColor * _Nonnull)sgMapBest SWIFT_WARN_UNUSED_RESULT;
/// 0xE3E3E3FF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgMapExpired;)
+ (UIColor * _Nonnull)sgMapExpired SWIFT_WARN_UNUSED_RESULT;
/// 0x767676FF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgMapExpiredHighlighted;)
+ (UIColor * _Nonnull)sgMapExpiredHighlighted SWIFT_WARN_UNUSED_RESULT;
/// 0xDB160FF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgBrandPrimaryDark;)
+ (UIColor * _Nonnull)sgBrandPrimaryDark SWIFT_WARN_UNUSED_RESULT;
/// 0xFF5B49FF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgBrandPrimary;)
+ (UIColor * _Nonnull)sgBrandPrimary SWIFT_WARN_UNUSED_RESULT;
/// 0xFFA399FF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgBrandPrimaryLight56;)
+ (UIColor * _Nonnull)sgBrandPrimaryLight56 SWIFT_WARN_UNUSED_RESULT;
/// 0xFFD8D3FF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgBrandPrimaryLight24;)
+ (UIColor * _Nonnull)sgBrandPrimaryLight24 SWIFT_WARN_UNUSED_RESULT;
/// 0xFFF2F0FF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgBrandPrimaryLight08;)
+ (UIColor * _Nonnull)sgBrandPrimaryLight08 SWIFT_WARN_UNUSED_RESULT;
/// 0x000FF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgBrandSecondaryDark;)
+ (UIColor * _Nonnull)sgBrandSecondaryDark SWIFT_WARN_UNUSED_RESULT;
/// 0x181818FF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgBrandSecondary;)
+ (UIColor * _Nonnull)sgBrandSecondary SWIFT_WARN_UNUSED_RESULT;
/// 0xFFFFFFFF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgBackgroundPrimary;)
+ (UIColor * _Nonnull)sgBackgroundPrimary SWIFT_WARN_UNUSED_RESULT;
/// 0x000FF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgBackgroundPrimaryAlt;)
+ (UIColor * _Nonnull)sgBackgroundPrimaryAlt SWIFT_WARN_UNUSED_RESULT;
/// 0xF5F5F4FF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgBackgroundSecondary;)
+ (UIColor * _Nonnull)sgBackgroundSecondary SWIFT_WARN_UNUSED_RESULT;
/// 0xF8F7F5FF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgBackgroundTertiary;)
+ (UIColor * _Nonnull)sgBackgroundTertiary SWIFT_WARN_UNUSED_RESULT;
/// 0xFDF0F0FF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgBackgroundCritical;)
+ (UIColor * _Nonnull)sgBackgroundCritical SWIFT_WARN_UNUSED_RESULT;
/// 0xFEF3ECFF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgBackgroundWarning;)
+ (UIColor * _Nonnull)sgBackgroundWarning SWIFT_WARN_UNUSED_RESULT;
/// 0xECF8F3FF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgBackgroundSuccess;)
+ (UIColor * _Nonnull)sgBackgroundSuccess SWIFT_WARN_UNUSED_RESULT;
/// 0xBA2626FF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgBackgroundDestructive;)
+ (UIColor * _Nonnull)sgBackgroundDestructive SWIFT_WARN_UNUSED_RESULT;
/// 0x000FF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgBackgroundTooltip;)
+ (UIColor * _Nonnull)sgBackgroundTooltip SWIFT_WARN_UNUSED_RESULT;
/// 0x000CC
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgBackgroundOverlay;)
+ (UIColor * _Nonnull)sgBackgroundOverlay SWIFT_WARN_UNUSED_RESULT;
/// 0xF5F5F4FF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgBackgroundDisabled;)
+ (UIColor * _Nonnull)sgBackgroundDisabled SWIFT_WARN_UNUSED_RESULT;
/// 0xECEEF3FF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgBackgroundMap;)
+ (UIColor * _Nonnull)sgBackgroundMap SWIFT_WARN_UNUSED_RESULT;
/// 0x000FF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgBackgroundButtonPrimary;)
+ (UIColor * _Nonnull)sgBackgroundButtonPrimary SWIFT_WARN_UNUSED_RESULT;
/// 0x181818CC
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgBackgroundButtonPrimaryHover;)
+ (UIColor * _Nonnull)sgBackgroundButtonPrimaryHover SWIFT_WARN_UNUSED_RESULT;
/// 0x181818CC
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgBackgroundButtonPrimaryPressed;)
+ (UIColor * _Nonnull)sgBackgroundButtonPrimaryPressed SWIFT_WARN_UNUSED_RESULT;
/// 0xFFFFFFFF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgBackgroundButtonSecondary;)
+ (UIColor * _Nonnull)sgBackgroundButtonSecondary SWIFT_WARN_UNUSED_RESULT;
/// 0xFFFFFFEB
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgBackgroundButtonSecondaryHover;)
+ (UIColor * _Nonnull)sgBackgroundButtonSecondaryHover SWIFT_WARN_UNUSED_RESULT;
/// 0xFFFFFFFF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgBackgroundButtonSecondaryPressed;)
+ (UIColor * _Nonnull)sgBackgroundButtonSecondaryPressed SWIFT_WARN_UNUSED_RESULT;
/// 0xFFFFFFFF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgBackgroundControl;)
+ (UIColor * _Nonnull)sgBackgroundControl SWIFT_WARN_UNUSED_RESULT;
/// 0xFFFFFFFF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgBackgroundControlHover;)
+ (UIColor * _Nonnull)sgBackgroundControlHover SWIFT_WARN_UNUSED_RESULT;
/// 0xFFFFFFFF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgBackgroundControlPressed;)
+ (UIColor * _Nonnull)sgBackgroundControlPressed SWIFT_WARN_UNUSED_RESULT;
/// 0x181818FF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgBackgroundControlSelected;)
+ (UIColor * _Nonnull)sgBackgroundControlSelected SWIFT_WARN_UNUSED_RESULT;
/// 0x181818CC
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgBackgroundControlSelectedHover;)
+ (UIColor * _Nonnull)sgBackgroundControlSelectedHover SWIFT_WARN_UNUSED_RESULT;
/// 0x181818CC
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgBackgroundControlSelectedPressed;)
+ (UIColor * _Nonnull)sgBackgroundControlSelectedPressed SWIFT_WARN_UNUSED_RESULT;
/// 0xDEDDDBFF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgDividerDividerApps;)
+ (UIColor * _Nonnull)sgDividerDividerApps SWIFT_WARN_UNUSED_RESULT;
/// 0x00014
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgDividerDividerWeb;)
+ (UIColor * _Nonnull)sgDividerDividerWeb SWIFT_WARN_UNUSED_RESULT;
/// 0x000FF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgOpacityBlack100;)
+ (UIColor * _Nonnull)sgOpacityBlack100 SWIFT_WARN_UNUSED_RESULT;
/// 0x000CC
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgOpacityBlack80;)
+ (UIColor * _Nonnull)sgOpacityBlack80 SWIFT_WARN_UNUSED_RESULT;
/// 0x000A3
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgOpacityBlack64;)
+ (UIColor * _Nonnull)sgOpacityBlack64 SWIFT_WARN_UNUSED_RESULT;
/// 0x0007A
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgOpacityBlack48;)
+ (UIColor * _Nonnull)sgOpacityBlack48 SWIFT_WARN_UNUSED_RESULT;
/// 0x00052
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgOpacityBlack32;)
+ (UIColor * _Nonnull)sgOpacityBlack32 SWIFT_WARN_UNUSED_RESULT;
/// 0x0003D
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgOpacityBlack24;)
+ (UIColor * _Nonnull)sgOpacityBlack24 SWIFT_WARN_UNUSED_RESULT;
/// 0x00029
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgOpacityBlack16;)
+ (UIColor * _Nonnull)sgOpacityBlack16 SWIFT_WARN_UNUSED_RESULT;
/// 0x0001F
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgOpacityBlack12;)
+ (UIColor * _Nonnull)sgOpacityBlack12 SWIFT_WARN_UNUSED_RESULT;
/// 0x00014
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgOpacityBlack08;)
+ (UIColor * _Nonnull)sgOpacityBlack08 SWIFT_WARN_UNUSED_RESULT;
/// 0x0000
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgOpacityBlack0;)
+ (UIColor * _Nonnull)sgOpacityBlack0 SWIFT_WARN_UNUSED_RESULT;
/// 0xFFFFFF14
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgOpacityWhite08;)
+ (UIColor * _Nonnull)sgOpacityWhite08 SWIFT_WARN_UNUSED_RESULT;
/// 0xFFFFFF1F
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgOpacityWhite12;)
+ (UIColor * _Nonnull)sgOpacityWhite12 SWIFT_WARN_UNUSED_RESULT;
/// 0xFFFFFF29
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgOpacityWhite16;)
+ (UIColor * _Nonnull)sgOpacityWhite16 SWIFT_WARN_UNUSED_RESULT;
/// 0xFFFFFF3D
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgOpacityWhite24;)
+ (UIColor * _Nonnull)sgOpacityWhite24 SWIFT_WARN_UNUSED_RESULT;
/// 0xFFFFFF52
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgOpacityWhite32;)
+ (UIColor * _Nonnull)sgOpacityWhite32 SWIFT_WARN_UNUSED_RESULT;
/// 0xFFFFFF7A
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgOpacityWhite48;)
+ (UIColor * _Nonnull)sgOpacityWhite48 SWIFT_WARN_UNUSED_RESULT;
/// 0xFFFFFFA3
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgOpacityWhite64;)
+ (UIColor * _Nonnull)sgOpacityWhite64 SWIFT_WARN_UNUSED_RESULT;
/// 0xFFFFFFCC
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgOpacityWhite80;)
+ (UIColor * _Nonnull)sgOpacityWhite80 SWIFT_WARN_UNUSED_RESULT;
/// 0xFFFFFFFF
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull sgOpacityWhite100;)
+ (UIColor * _Nonnull)sgOpacityWhite100 SWIFT_WARN_UNUSED_RESULT;
@end


@interface UIFont (SWIFT_EXTENSION(SeatGeekSDK))
+ (UIFont * _Nonnull)systemFontWithWeighted:(UIFontWeight)weight SWIFT_WARN_UNUSED_RESULT;
+ (UIFont * _Nonnull)sfFontOfSize:(CGFloat)size weight:(UIFontWeight)weight SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIFont * _Nonnull acknowledgementDefaultFont;)
+ (UIFont * _Nonnull)acknowledgementDefaultFont SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIFont * _Nonnull acknowledgementLinkFont;)
+ (UIFont * _Nonnull)acknowledgementLinkFont SWIFT_WARN_UNUSED_RESULT;
/// Preserves font traits and adds a bold trait if it does not exist
///
/// returns:
/// A bold version of the font if one exists in the font family
- (UIFont * _Nonnull)setBold SWIFT_WARN_UNUSED_RESULT;
@end



@interface UIImage (SWIFT_EXTENSION(SeatGeekSDK))
- (UIImage * _Nonnull)sgk_coloredWithColor:(UIColor * _Nonnull)color SWIFT_WARN_UNUSED_RESULT;
- (UIImage * _Nonnull)sgk_imageByAddingWithImages:(NSArray<UIImage *> * _Nonnull)images SWIFT_WARN_UNUSED_RESULT;
+ (UIImage * _Nonnull)sgk_clockIcon SWIFT_WARN_UNUSED_RESULT;
@end







@interface UINavigationBar (SWIFT_EXTENSION(SeatGeekSDK))
- (void)sg_configureWithWhiteBackground;
@end


@interface UINavigationItem (SWIFT_EXTENSION(SeatGeekSDK))
@property (nonatomic, strong) SGNavBarButton * _Nullable leftBarButton;
@property (nonatomic, copy) NSArray<SGNavBarButton *> * _Nullable leftBarButtons;
@property (nonatomic, strong) SGNavBarButton * _Nullable rightBarButton;
@property (nonatomic, copy) NSArray<SGNavBarButton *> * _Nullable rightBarButtons;
@end



@interface UIScrollView (SWIFT_EXTENSION(SeatGeekSDK))
- (void)sgk_scrollToTopAnimated:(BOOL)animated;
- (void)sgk_scrollToBottomAnimated:(BOOL)animated;
@property (nonatomic, readonly) CGFloat sgk_heightWithoutInsets;
@property (nonatomic, readonly) BOOL sgk_isScrolledToTop;
@end



@interface UIStackView (SWIFT_EXTENSION(SeatGeekSDK))
- (UIView * _Nonnull)sgk_addSpaceWithHeight:(CGFloat)height;
- (void)sgk_removeAllArrangedSubviews;
@end


@interface UIStoryboard (SWIFT_EXTENSION(SeatGeekSDK))
/// Instantiates a DebugViewController
+ (SGCreditCardScannerViewController * _Nonnull)instantiateCreditCardScannerViewController SWIFT_WARN_UNUSED_RESULT;
@end


@interface UIStoryboard (SWIFT_EXTENSION(SeatGeekSDK))
/// Instantiates a StripeVerifyViewController
+ (StripeVerifyViewController * _Nonnull)instantiateStripeVerifyViewControllerWithPayoutMethod:(SGPayoutMethod * _Nonnull)payoutMethod SWIFT_WARN_UNUSED_RESULT;
@end







@interface UIView (SWIFT_EXTENSION(SeatGeekSDK))
- (void)sgk_roundTopCorners;
- (void)sgk_roundTopCornersWithYOffset:(CGFloat)yOffset;
@end




@interface UIView (SWIFT_EXTENSION(SeatGeekSDK))
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIView * _Nonnull sgk_keyline;)
+ (UIView * _Nonnull)sgk_keyline SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIView * _Nonnull sgk_verticalKeyline;)
+ (UIView * _Nonnull)sgk_verticalKeyline SWIFT_WARN_UNUSED_RESULT;
+ (UIView * _Nonnull)sgk_separatorView SWIFT_WARN_UNUSED_RESULT;
@end




@class UITextPosition;

SWIFT_CLASS("_TtC11SeatGeekSDK19UnderlinedTextField")
@interface UnderlinedTextField : UITextField
@property (nonatomic, copy) NSString * _Nullable placeholder;
@property (nonatomic, copy) NSString * _Nullable errorMessage;
@property (nonatomic) BOOL shouldHideCaret;
@property (nonatomic, readonly) CGSize intrinsicContentSize;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (void)layoutSubviews;
- (CGSize)sizeThatFits:(CGSize)size SWIFT_WARN_UNUSED_RESULT;
- (BOOL)becomeFirstResponder SWIFT_WARN_UNUSED_RESULT;
- (BOOL)resignFirstResponder SWIFT_WARN_UNUSED_RESULT;
- (CGRect)textRectForBounds:(CGRect)bounds SWIFT_WARN_UNUSED_RESULT;
- (CGRect)editingRectForBounds:(CGRect)bounds SWIFT_WARN_UNUSED_RESULT;
- (CGRect)placeholderRectForBounds:(CGRect)bounds SWIFT_WARN_UNUSED_RESULT;
- (CGRect)clearButtonRectForBounds:(CGRect)bounds SWIFT_WARN_UNUSED_RESULT;
- (CGRect)leftViewRectForBounds:(CGRect)bounds SWIFT_WARN_UNUSED_RESULT;
- (CGRect)rightViewRectForBounds:(CGRect)bounds SWIFT_WARN_UNUSED_RESULT;
- (CGRect)borderRectForBounds:(CGRect)bounds SWIFT_WARN_UNUSED_RESULT;
- (CGRect)caretRectForPosition:(UITextPosition * _Nonnull)position SWIFT_WARN_UNUSED_RESULT;
- (BOOL)canPerformAction:(SEL _Nonnull)action withSender:(id _Nullable)sender SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS_NAMED("UpcomingEvent")
@interface SGKUpcomingEvent : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("UpcomingEventDataSource")
@interface SGKUpcomingEventDataSource : NSObject
- (void)fetchUpcomingEvent;
- (void)onFetchUpcomingEvent:(void (^ _Nonnull)(SGKUpcomingEvent * _Nullable, NSError * _Nullable))completionBlock;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM_NAMED(NSInteger, SGKUpcomingEventError, "UpcomingEventError", open) {
  SGKUpcomingEventErrorUserLoggedOut = -1,
  SGKUpcomingEventErrorNetworkError = -2,
  SGKUpcomingEventErrorNoEventFound = -3,
};




SWIFT_CLASS_NAMED("VerticalListView")
@interface SGVerticalListView : UIScrollView
@property (nonatomic, readonly) BOOL isEditing;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) BOOL requiresConstraintBasedLayout;)
+ (BOOL)requiresConstraintBasedLayout SWIFT_WARN_UNUSED_RESULT;
- (NSArray<SGVerticalListRowView *> * _Nonnull)rows SWIFT_WARN_UNUSED_RESULT;
- (void)addView:(SGVerticalListRowView * _Nonnull)view;
- (void)reset;
- (void)deleteRow:(SGVerticalListRowView * _Nonnull)row animated:(BOOL)animated;
- (void)setEditing:(BOOL)editing animated:(BOOL)animated;
@end


SWIFT_CLASS_NAMED("WebViewController")
@interface SGWebViewController : UIViewController
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SGWebViewController * _Nonnull buyerGuarantee;)
+ (SGWebViewController * _Nonnull)buyerGuarantee SWIFT_WARN_UNUSED_RESULT;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
- (void)viewDidLoad;
- (void)viewSafeAreaInsetsDidChange;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end


@interface SGWebViewController (SWIFT_EXTENSION(SeatGeekSDK)) <MFMailComposeViewControllerDelegate>
- (void)mailComposeController:(MFMailComposeViewController * _Nonnull)controller didFinishWithResult:(MFMailComposeResult)result error:(NSError * _Nullable)error;
@end

@class WKWebViewConfiguration;
@class WKWindowFeatures;

@interface SGWebViewController (SWIFT_EXTENSION(SeatGeekSDK)) <WKUIDelegate>
- (WKWebView * _Nullable)webView:(WKWebView * _Nonnull)webView createWebViewWithConfiguration:(WKWebViewConfiguration * _Nonnull)configuration forNavigationAction:(WKNavigationAction * _Nonnull)navigationAction windowFeatures:(WKWindowFeatures * _Nonnull)windowFeatures SWIFT_WARN_UNUSED_RESULT;
@end

@class WKNavigation;

@interface SGWebViewController (SWIFT_EXTENSION(SeatGeekSDK)) <WKNavigationDelegate>
- (void)webView:(WKWebView * _Nonnull)webView didCommitNavigation:(WKNavigation * _Null_unspecified)didCommit;
- (void)webView:(WKWebView * _Nonnull)webView didFailNavigation:(WKNavigation * _Null_unspecified)didFail withError:(NSError * _Nonnull)withError;
- (void)webView:(WKWebView * _Nonnull)webView decidePolicyForNavigationAction:(WKNavigationAction * _Nonnull)navigationAction decisionHandler:(SWIFT_NOESCAPE void (^ _Nonnull)(WKNavigationActionPolicy))decisionHandler;
@end

#endif
#if defined(__cplusplus)
#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#else
#error unsupported Swift architecture
#endif
